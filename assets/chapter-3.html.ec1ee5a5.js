import{r as e,c as t,a as n,b as o,w as c,F as l,d as s,o as p}from"./app.bdc3a143.js";import{_ as u}from"./plugin-vue_export-helper.5a098b48.js";var r="/course-notes/assets/figure-1.183873f6.png",i="/course-notes/assets/figure-2.e0ca2cf6.png";const d={},k=n("h1",{id:"unix-socket-programming",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#unix-socket-programming","aria-hidden":"true"},"#"),s(" UNIX Socket Programming")],-1),b=n("h2",{id:"preliminary",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#preliminary","aria-hidden":"true"},"#"),s(" Preliminary")],-1),m=s("Server and client exchange messages over network through a common "),h=s("socket API"),f=n("h3",{id:"transportation-layer-protocols",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#transportation-layer-protocols","aria-hidden":"true"},"#"),s(" Transportation-layer protocols")],-1),_=n("h4",{id:"udp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#udp","aria-hidden":"true"},"#"),s(" UDP")],-1),g=n("ul",null,[n("li",null,"Single socket to receive messages"),n("li",null,"No guarantee of delivery"),n("li",null,"Not necessarily in-order delivery"),n("li",null,[n("strong",null,"Datagram"),n("ul",null,[n("li",null,"Independent packets")])]),n("li",null,"Must address each packet"),n("li",null,[s("Examples "),n("ul",null,[n("li",null,"Multimedia"),n("li",null,"VoIP")])])],-1),y=n("h4",{id:"tcp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tcp","aria-hidden":"true"},"#"),s(" TCP")],-1),v=n("ul",null,[n("li",null,"Connection-oriented, dedicated socket for each connection"),n("li",null,"Reliable, ensuring delivery"),n("li",null,[s("Byte "),n("strong",null,"stream"),s(", in-order delivery")]),n("li",null,"Setup connection before data transfer"),n("li",null,[s("Examples "),n("ul",null,[n("li",null,"Web"),n("li",null,"email"),n("li",null,"ssh")])])],-1),w=n("h3",{id:"port",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#port","aria-hidden":"true"},"#"),s(" Port")],-1),x=n("p",null,[s("A host can have up to 2"),n("sup",null,"16"),s(" ports and they're used by different processes on the host. The port numbers are used to identify entities (processes) on a host. Port numbers can be")],-1),I=n("ol",null,[n("li",null,"Well-known (ports 0 ~ 1023)"),n("li",null,[s("Registered (ports 1024 ~ 49151) "),n("ul",null,[n("li",null,"can be used by ordinary users")])]),n("li",null,"Dynamic, private, or ephemeral (ports 49152 ~ 65535)")],-1),P=n("ul",null,[n("li",null,[n("strong",null,"Servers"),s(" and "),n("strong",null,"daemons"),s(" (medium between applications and the kernel) usually use well-known ports "),n("ul",null,[n("li",null,"https: 443"),n("li",null,"ssh: 22")])]),n("li",null,[s("Client usually use dynamic ports "),n("ul",null,[n("li",null,"Assigned by the kernel at run time")])])],-1),T=n("h3",{id:"ip-address",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ip-address","aria-hidden":"true"},"#"),s(" IP address")],-1),D=n("p",null,[s("Each attachment point on the Internet is assigned with a unique "),n("strong",null,"address"),s(". However, it hard for human to memorize the numeric addresses. Instead, we prefer to deal with names, hence the domain name server (DNS) provides the mapping of host names to their IP address.")],-1),S=n("h4",{id:"ipv4-internet-addressing",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ipv4-internet-addressing","aria-hidden":"true"},"#"),s(" IPv4 Internet addressing")],-1),A=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<netinet/in.h>")]),s(`

`),n("span",{class:"token comment"},"/* Internet address structure */"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"in_addr"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"in_addr_t"),s(" s_addr"),n("span",{class:"token punctuation"},";"),s("                   "),n("span",{class:"token comment"},"/* 32-bit IPv4 address */"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"/* Socket address */"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(),n("span",{class:"token punctuation"},"{"),s(`
    u_char          sin_len`),n("span",{class:"token punctuation"},";"),s("            "),n("span",{class:"token comment"},"/* length (16, optional) */"),s(`
    u_short         sin_family`),n("span",{class:"token punctuation"},";"),s("         "),n("span",{class:"token comment"},"/* address family (AF_INET) <- v4 */"),s(`
    u_short         sin_port`),n("span",{class:"token punctuation"},";"),s("           "),n("span",{class:"token comment"},"/* UDP or TCP port */"),s(`

    `),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"in_addr"),s("  sin_addr"),n("span",{class:"token punctuation"},";"),s("           "),n("span",{class:"token comment"},"/* IP address */"),s(`
    `),n("span",{class:"token keyword"},"char"),s("            sin_zero"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("        "),n("span",{class:"token comment"},"/* unused (padding) */"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br")])],-1),U=n("h4",{id:"ipv6-internet-addressing",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ipv6-internet-addressing","aria-hidden":"true"},"#"),s(" IPv6 Internet addressing")],-1),C=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<netinet/in.h>")]),s(`

`),n("span",{class:"token comment"},"/* Internet address structure */"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"in6_addr"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"uint8_t"),s(" s6_addr"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"16"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("                "),n("span",{class:"token comment"},"/* 128-bit IPv6 address */"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"SIN6_LEN"),s("                       "),n("span",{class:"token comment"},"/* required for compile-time tests */")]),s(`

`),n("span",{class:"token comment"},"/* Socket address */"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in6"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"sa_family_t"),s("     sin6_family"),n("span",{class:"token punctuation"},";"),s("        "),n("span",{class:"token comment"},"/* AF_INET6 <- v4 */"),s(`
    `),n("span",{class:"token class-name"},"in_port_t"),s("       sin6_port"),n("span",{class:"token punctuation"},";"),s("          "),n("span",{class:"token comment"},"/* transport layer port num */"),s(`
    `),n("span",{class:"token class-name"},"uint32_t"),s("        sin6_flowinfo"),n("span",{class:"token punctuation"},";"),s("      "),n("span",{class:"token comment"},"/* IPv6 flow information */"),s(`
    `),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"in6_addr"),s(" sin6_addr"),n("span",{class:"token punctuation"},";"),s("          "),n("span",{class:"token comment"},"/* IPv6 address */"),s(`
    `),n("span",{class:"token comment"},"/* set of interfaces for a scope */"),s(`
    `),n("span",{class:"token class-name"},"uint32_t"),s("        sin6_scope_id"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br")])],-1),E=n("h4",{id:"byte-ordering",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#byte-ordering","aria-hidden":"true"},"#"),s(" Byte ordering")],-1),N=n("p",null,"The endianess (big/little) may be different between hosts, so we should use a byte-ordering translation procedure to maintain the compatibility.",-1),F=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<netinet/in.h>")]),s(`
`),n("span",{class:"token class-name"},"uint32_t"),s(),n("span",{class:"token function"},"htonl"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"uint32_t"),s(" hostlong"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token class-name"},"uint16_t"),s(),n("span",{class:"token function"},"htons"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"uint16_t"),s(" hostshort"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token class-name"},"uint32_t"),s(),n("span",{class:"token function"},"ntohl"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"uint32_t"),s(" netlong"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token class-name"},"uint16_t"),s(),n("span",{class:"token function"},"ntohs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"uint16_t"),s(" netshort"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br")])],-1),z=n("ul",null,[n("li",null,[n("strong",null,"h"),s(": host byte order")]),n("li",null,[n("strong",null,"n"),s(": network (remote) byte order")]),n("li",null,[n("strong",null,"l"),s(": long (4 bytes), used to convert IP addresses")]),n("li",null,[n("strong",null,"s"),s(": short (2 bytes), used to convert port numbers")])],-1),R=n("h4",{id:"unix-data-types",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#unix-data-types","aria-hidden":"true"},"#"),s(" UNIX data types")],-1),O=n("table",null,[n("tr",null,[n("th",null,"Datatype"),n("th",null,"Description"),n("th",null,"Header")]),n("tr",null,[n("td",null,"int8_t"),n("td",null,"Unsigned 8-bit integer"),n("td",{rowspan:"6"},"<sys/types.h>")]),n("tr",null,[n("td",null,"uint8_t"),n("td",null,"Signed 16-bit integer")]),n("tr",null,[n("td",null,"int16_t"),n("td",null,"Signed 16-bit integer")]),n("tr",null,[n("td",null,"uint16_t"),n("td",null,"Unsigned 16-bit integer")]),n("tr",null,[n("td",null,"int32_t"),n("td",null,"Signed 32-bit integer")]),n("tr",null,[n("td",null,"uint32_t"),n("td",null,"Unsigned 32-bit integer")]),n("tr",null,[n("td",null,"sa_family_t"),n("td",null,"Address family of socket address structure"),n("td",{rowspan:"2"},"<sys/socket.h>")]),n("tr",null,[n("td",null,"socklen_t"),n("td",null,"Length of socket address structure, normally uint32_t")]),n("tr",null,[n("td",null,"in_addr_t"),n("td",null,"IPv4 address, normally uint32_t"),n("td",{rowspan:"2"},"<netinet/in.h>")]),n("tr",null,[n("td",null,"in_port_t"),n("td",null,"TCP or UDP port, normally uint16_t")])],-1),q=n("h2",{id:"basic-socket-i-o",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#basic-socket-i-o","aria-hidden":"true"},"#"),s(" Basic Socket I/O")],-1),B=n("p",null,[s("Socket is a "),n("strong",null,"file descriptor"),s(" which allows an application to read/write data from/to the network.")],-1),G=n("div",{class:"custom-container tip"},[n("p",{class:"custom-container-title"},"File Descriptor"),n("p",null,[s("In Unix, all of the I/O are treated as files stream, where "),n("code",null,"stdin"),s(", "),n("code",null,"stdout"),s(" and "),n("code",null,"stderr"),s(" are mapped to "),n("code",null,"0"),s(", "),n("code",null,"1"),s(" and "),n("code",null,"2"),s(" in the file descriptor table respectively.")])],-1),L=n("h3",{id:"tcp-server",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tcp-server","aria-hidden":"true"},"#"),s(" TCP server")],-1),W=n("p",null,"TCP establishes connection before each host can transmit data. We require a serial of procedures to build up a TCP server",-1),M=n("ol",null,[n("li",null,[n("a",{href:"#socket-procedure"},"socket()"),s(": Get the "),n("strong",null,"file descriptor"),s(".")]),n("li",null,[n("a",{href:"#bind-procedure"},"bind()"),s(": Connect the file descriptor with "),n("strong",null,"IP"),s(" and "),n("strong",null,"port"),s(".")]),n("li",null,[n("a",{href:"#listen-procedure"},"listen()"),s(": "),n("strong",null,"Wait"),s(" for request from clients.")]),n("li",null,[n("a",{href:"#accept-procedure"},"accept()"),s(": "),n("strong",null,"Accept"),s(" request.")]),n("li",null,[n("a",{href:"#read-procedure"},"read()"),s(": Read data from the socket.")])],-1),K=n("h4",{id:"socket-procedure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#socket-procedure","aria-hidden":"true"},"#"),s(" socket procedure")],-1),Z=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<sys/socket.h>")]),s(`

`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"socket"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" family"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" type"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" protocol"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br")])],-1),j=n("ul",null,[n("li",null,[n("code",null,"socket()"),s(" returns the file descriptor "),n("ul",null,[n("li",null,"A negative value indicates an error")])]),n("li",null,[n("code",null,"family"),n("ul",null,[n("li",null,[n("code",null,"AF_INET"),s(" for IPv4")]),n("li",null,[n("code",null,"AF_INET6"),s(" for IPv6")])])]),n("li",null,[n("code",null,"type"),n("ul",null,[n("li",null,[n("code",null,"SOCK_STREAM"),s(", typically TCP")]),n("li",null,[n("code",null,"SOCK_DGRAMm"),s(" typically UDP")])])]),n("li",null,[n("code",null,"protocol"),s(", if not compatible with "),n("code",null,"type"),s(", then default to TCP or UDP based on "),n("code",null,"type"),n("ul",null,[n("li",null,[n("code",null,"IPPROTO_TCP")]),n("li",null,[n("code",null,"IPPROTO_UDP")]),n("li",null,"...")])])],-1),H=n("h4",{id:"bind-procedure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#bind-procedure","aria-hidden":"true"},"#"),s(" bind procedure")],-1),V=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" srv"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"/* 1) create the socket by socket() */"),s(`

srv`),n("span",{class:"token punctuation"},"."),s("sin_family      "),n("span",{class:"token operator"},"="),s(" AF_INET"),n("span",{class:"token punctuation"},";"),s("              "),n("span",{class:"token comment"},"/* IPv4*/"),s(`
srv`),n("span",{class:"token punctuation"},"."),s("sin_port        "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"htons"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"80"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("            "),n("span",{class:"token comment"},"/* listen on port 80 */"),s(`
srv`),n("span",{class:"token punctuation"},"."),s("sin_addr"),n("span",{class:"token punctuation"},"."),s("s_addr "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"htonl"),n("span",{class:"token punctuation"},"("),s("INADDR_ANY"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("    "),n("span",{class:"token comment"},"/* listen on all of the network interface */"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"bind"),n("span",{class:"token punctuation"},"("),s("fd"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr"),n("span",{class:"token operator"},"*"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&"),s("srv"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("srv"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"bind"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br")])],-1),X=n("h4",{id:"listen-procedure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#listen-procedure","aria-hidden":"true"},"#"),s(" listen procedure")],-1),Y=n("p",null,[s("When a socket is created by "),n("code",null,"socket()"),s(", it default to a "),n("strong",null,"active"),s(" socket. Then "),n("code",null,"listen()"),s(" procedure converts it to a "),n("strong",null,"passive"),s(" socket, so kernel can accept incoming connection directed to this socket.")],-1),J=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"BACKLOG"),s(),n("span",{class:"token expression"},[n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"5"),s("     ")]),n("span",{class:"token comment"},"/* This specifies the max #connections that kernel should queue for this socket */")]),s(`
`),n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" srv"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"/* 1) create the socket by socket() */"),s(`
`),n("span",{class:"token comment"},"/* 2) bind the socket to a port by bind() */"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"listen"),n("span",{class:"token punctuation"},"("),s("fd"),n("span",{class:"token punctuation"},","),s(" BACKLOG"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"listen"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br")])],-1),Q=n("p",null,[s("Here the connection is not established yet! We just store the requests in a queue. The size of the queue depends on "),n("code",null,"BACKLOG")],-1),$=n("div",{class:"custom-container danger"},[n("p",{class:"custom-container-title"},"Backlog of Zero"),n("p",null,[s("If you do not want any client to connect to your socket, just "),n("strong",null,"close"),s(" the socket. The backlog is a "),n("strong",null,"pseudo"),s(" size. A backlog of zero do not set the number of queued connections to zero.")])],-1),nn=n("h4",{id:"accept-procedure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#accept-procedure","aria-hidden":"true"},"#"),s(" accept procedure")],-1),sn=n("p",null,[n("code",null,"accept()"),s(" blocks waiting for a connection, and if there's request, a connection is established. It returns a "),n("strong",null,"new socket"),s(" (newfd, dedicated socket for the connection).")],-1),an=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},";"),s("                     "),n("span",{class:"token comment"},"/* used by socket() */"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" srv"),n("span",{class:"token punctuation"},";"),s("     "),n("span",{class:"token comment"},"/* used by bind() */"),s(`

`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" cli"),n("span",{class:"token punctuation"},";"),s("     "),n("span",{class:"token comment"},"/* used by accept() */"),s(`
`),n("span",{class:"token keyword"},"int"),s(" newfd"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"int"),s(" cli_len "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("cli"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"/* 1) create the socket by socket() */"),s(`
`),n("span",{class:"token comment"},"/* 2) bind the socket to a port by bind() */"),s(`
`),n("span",{class:"token comment"},"/* 3) listen on the socket */"),s(`

newfd `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"accept"),n("span",{class:"token punctuation"},"("),s("fd"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr"),n("span",{class:"token operator"},"*"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&"),s("cli"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("cli_len"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"/* The client may be IPv4 or IPv6, pass the references of client variables */"),s(`
`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("newfd "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"accept"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br")])],-1),en=n("ul",null,[n("li",null,[s("Get the information of the client "),n("ul",null,[n("li",null,[n("code",null,"cli.sin_addr.s_addr"),s(" contains client's IP address")]),n("li",null,[n("code",null,"cli.sin_port"),s(" contains client's port number")]),n("li",null,[s("Use "),n("a",{href:"#numerical-address-to-string"},"this"),s(" to extract the content.")])])]),n("li",null,[s("Then, the server can exchange data with the client by using "),n("code",null,"read()"),s(" and "),n("code",null,"write()"),s(" on the file descriptor "),n("code",null,"newfd")])],-1),tn=n("h4",{id:"read-procedure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#read-procedure","aria-hidden":"true"},"#"),s(" read procedure")],-1),on=n("ul",null,[n("li",null,[n("code",null,"read()"),s(" can be used to get data from a socket "),n("ul",null,[n("li",null,[n("code",null,"read()"),s(" blocks waiting for data from the client")]),n("li",null,[s("It does "),n("strong",null,"not"),s(" guarantee that a "),n("code",null,"sizeof(buf)"),s(" amount of data will be read")]),n("li",null,"It returns #bytes transmitted")])])],-1),cn=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"BUFSIZE"),s(),n("span",{class:"token expression"},[n("span",{class:"token number"},"512")])]),s(`
inf newfd`),n("span",{class:"token punctuation"},";"),s("             "),n("span",{class:"token comment"},"/* dedicated fd */"),s(`
`),n("span",{class:"token keyword"},"char"),s(" buf"),n("span",{class:"token punctuation"},"["),s("BUFSIZE"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"int"),s(" nbytes"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"/* 1) create the socket by socket() */"),s(`
`),n("span",{class:"token comment"},"/* 2) bind the socket to a port by bind() */"),s(`
`),n("span",{class:"token comment"},"/* 3) listen on the socket */"),s(`
`),n("span",{class:"token comment"},"/* 4) accept the incoming connection */"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("nbytes "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"read"),n("span",{class:"token punctuation"},"("),s("newfd"),n("span",{class:"token punctuation"},","),s(" buf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("buf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"read"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br")])],-1),ln=n("h3",{id:"tcp-client",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tcp-client","aria-hidden":"true"},"#"),s(" TCP client")],-1),pn=n("h4",{id:"deal-with-ip-address",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#deal-with-ip-address","aria-hidden":"true"},"#"),s(" Deal with IP address")],-1),un=n("p",null,[s("TCP client needs to know the IP address of the server. However, we use IP addresses as "),n("strong",null,"strings"),s(" (with dot, right?) Meanwhile, The computers only recognize them as numbers. So we need a "),n("strong",null,"conversion procedure"),s(" again.")],-1),rn=n("h5",{id:"string-to-numerical-address",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#string-to-numerical-address","aria-hidden":"true"},"#"),s(" String to numerical address")],-1),dn=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" srv"),n("span",{class:"token punctuation"},";"),s(`

srv`),n("span",{class:"token punctuation"},"."),s("sin_addr"),n("span",{class:"token punctuation"},"."),s("s_addr "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"inet_addr"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"140.117.11.87"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("srv"),n("span",{class:"token punctuation"},"."),s("sin_addr"),n("span",{class:"token punctuation"},"."),s("s_addr "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"in_addr_t"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"fprintf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"stderr"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"inet_addr failed!\\n"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br")])],-1),kn=n("h5",{id:"numerical-address-to-string",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#numerical-address-to-string","aria-hidden":"true"},"#"),s(" Numerical address to string")],-1),bn=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" srv"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"char"),s(),n("span",{class:"token operator"},"*"),s("t "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"inet_ntoa"),n("span",{class:"token punctuation"},"("),s("srv"),n("span",{class:"token punctuation"},"."),s("sin_addr"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("t "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"fprintf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"stderr"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"inet_ntoa failed!\\n"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br")])],-1),mn=n("h4",{id:"connect-procedure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#connect-procedure","aria-hidden":"true"},"#"),s(" connect procedure")],-1),hn=n("p",null,[n("code",null,"connect()"),s(" allows a client to connect with the server.")],-1),fn=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" srv"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"/* 1) create the socket by socket() */"),s(`

srv`),n("span",{class:"token punctuation"},"."),s("sin_family      "),n("span",{class:"token operator"},"="),s(" AF_INET"),n("span",{class:"token punctuation"},";"),s(`
srv`),n("span",{class:"token punctuation"},"."),s("sin_port        "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"htons"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"80"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
srv`),n("span",{class:"token punctuation"},"."),s("sin_addr"),n("span",{class:"token punctuation"},"."),s("s_addr "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"inet_addr"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"140.117.11.87"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"/* specify the server IP */"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"connect"),n("span",{class:"token punctuation"},"("),s("fd"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr"),n("span",{class:"token operator"},"*"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&"),s("srv"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("srv"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"connect"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br")])],-1),_n=n("h4",{id:"write-procedure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#write-procedure","aria-hidden":"true"},"#"),s(" write procedure")],-1),gn=n("p",null,[n("code",null,"write()"),s(" can be used to write data to a socket")],-1),yn=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"BUFSIZE"),s(),n("span",{class:"token expression"},[n("span",{class:"token number"},"512")])]),s(`
`),n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" srv"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"char"),s(" buf"),n("span",{class:"token punctuation"},"["),s("BUFSIZE"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"int"),s(" nbytes"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"/* 1) create the socket by socket() */"),s(`
`),n("span",{class:"token comment"},"/* 2) connect() to the server */"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("nbytes "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"write"),n("span",{class:"token punctuation"},"("),s("fd"),n("span",{class:"token punctuation"},","),s(" buf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("buf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"write"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br")])],-1),vn=n("h4",{id:"tcp-client-server-interaction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tcp-client-server-interaction","aria-hidden":"true"},"#"),s(" TCP client-server interaction")],-1),wn=n("p",null,[n("img",{src:r,alt:"figure-1"})],-1),xn=n("blockquote",null,[n("p",null,"Image credit to Professor Wang's slides")],-1),In=n("h3",{id:"udp-server",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#udp-server","aria-hidden":"true"},"#"),s(" UDP server")],-1),Pn=n("p",null,"UDP uses a single socket for all the transmission We require a three procedures to build up a UDP server",-1),Tn=n("ol",null,[n("li",null,[n("a",{href:"#socket-procedure-2"},"socket()"),s(": Get the "),n("strong",null,"file descriptor"),s(".")]),n("li",null,[n("a",{href:"#bind-procedure-2"},"bind()"),s(": Connect the file descriptor with "),n("strong",null,"IP"),s(" and "),n("strong",null,"port"),s(".")]),n("li",null,[n("a",{href:"#recvfrom-procedure"},"recvfrom()"),s(": Receive data from the socket")])],-1),Dn=n("h4",{id:"socket-procedure-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#socket-procedure-1","aria-hidden":"true"},"#"),s(" socket procedure")],-1),Sn=n("p",null,[s("UDP server must create a "),n("strong",null,"datagram"),s(" socket")],-1),An=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("fd "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"socket"),n("span",{class:"token punctuation"},"("),s("AF_INET"),n("span",{class:"token punctuation"},","),s(" SOCK_DGRAM"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"/* we didn't specify the protocol, becuase SOCK_DGRAM default it to UDP */"),s(`
    `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"socket"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"eixt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br")])],-1),Un=n("h4",{id:"bind-procedure-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#bind-procedure-1","aria-hidden":"true"},"#"),s(" bind procedure")],-1),Cn=n("p",null,"A socket can be bound to a port",-1),En=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" srv"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"/* 1) create the socket by socket() */"),s(`

srv`),n("span",{class:"token punctuation"},"."),s("sin_family      "),n("span",{class:"token operator"},"="),s(" AF_INET"),n("span",{class:"token punctuation"},";"),s(`
srv`),n("span",{class:"token punctuation"},"."),s("sin_port        "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"htons"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"123"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
srv`),n("span",{class:"token punctuation"},"."),s("sin_addr"),n("span",{class:"token punctuation"},"."),s("s_addr "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"htonl"),n("span",{class:"token punctuation"},"("),s("INADDR_ANY"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"bind"),n("span",{class:"token punctuation"},"("),s("fd"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr"),n("span",{class:"token operator"},"*"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&"),s("srv"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("srv"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"bind"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br")])],-1),Nn=n("h4",{id:"recvfrom-procedure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#recvfrom-procedure","aria-hidden":"true"},"#"),s(" recvfrom procedure")],-1),Fn=n("p",null,[n("code",null,"read"),s(" does not provide client's addres to UDP server, but in UDP, every transmission need to specify the IP.")],-1),zn=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" srv"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" cli"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"char"),s(" buf"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"512"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"int"),s(" cli_len "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("cli"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"int"),s(" nbytes"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"/* 1) create the socket by socket() */"),s(`
`),n("span",{class:"token comment"},"/* 2) bind to the socket by bind() */"),s(`

nbyts `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"recvfrom"),n("span",{class:"token punctuation"},"("),s("fd"),n("span",{class:"token punctuation"},","),s(" buf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("buf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr"),n("span",{class:"token operator"},"*"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&"),s("cli"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("cli_len"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("nbytes "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"recvfrom"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br")])],-1),Rn=n("p",null,"Actoins performed by recvfrom() procedure",-1),On=n("ol",null,[n("li",null,[s("Return the #bytes read, i.e., "),n("code",null,"nbytes"),s(".")]),n("li",null,[s("Copy a "),n("code",null,"nbytes"),s(" amount of data into "),n("code",null,"buf"),s(".")]),n("li",null,[s("Modified the address of the client, i.e., "),n("code",null,"cli"),s(".")]),n("li",null,[s("Modified the length of the client, i.e., "),n("code",null,"cli_len"),s(".")])],-1),qn=n("h3",{id:"udp-client",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#udp-client","aria-hidden":"true"},"#"),s(" UDP client")],-1),Bn=n("ol",null,[n("li",null,[s("socket(): Get the "),n("strong",null,"file descriptor"),s(".")]),n("li",null,"sendto(): Send data to the socket")],-1),Gn=n("h4",{id:"sendto-procedure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sendto-procedure","aria-hidden":"true"},"#"),s(" sendto procedure")],-1),Ln=n("p",null,[s("UDP client does not bind a port number. A port number is dynamically assigned when the first "),n("code",null,"sendto()"),s(" procedure is invoked.")],-1),Wn=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr_in"),s(" srv"),n("span",{class:"token punctuation"},";"),s(`

srv`),n("span",{class:"token punctuation"},"."),s("sin_family      "),n("span",{class:"token operator"},"="),s(" AF_INET"),n("span",{class:"token punctuation"},";"),s(`
srv`),n("span",{class:"token punctuation"},"."),s("sin_port        "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"htons"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"123"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
srv`),n("span",{class:"token punctuation"},"."),s("sin_addr"),n("span",{class:"token punctuation"},"."),s("s_addr "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"inet_addr"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"140.117.11.87"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

nbytes `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"sendto"),n("span",{class:"token punctuation"},"("),s("fd"),n("span",{class:"token punctuation"},","),s(" buf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("buf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"sockaddr"),n("span",{class:"token operator"},"*"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&"),s("srv"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("srv"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("nbytes "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"sendto"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br")])],-1),Mn=n("h4",{id:"udp-client-server-interaction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#udp-client-server-interaction","aria-hidden":"true"},"#"),s(" UDP client-server interaction")],-1),Kn=n("p",null,[n("img",{src:i,alt:"figure-2"})],-1),Zn=n("blockquote",null,[n("p",null,"Image credit to Professor Wang's slides")],-1),jn=n("h2",{id:"advanced-socket-i-o",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#advanced-socket-i-o","aria-hidden":"true"},"#"),s(" Advanced Socket I/O")],-1),Hn=n("h3",{id:"simultaneous-udp-server",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#simultaneous-udp-server","aria-hidden":"true"},"#"),s(" Simultaneous UDP server")],-1),Vn=n("h4",{id:"a-naive-solution",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#a-naive-solution","aria-hidden":"true"},"#"),s(" A naive solution")],-1),Xn=n("p",null,"What's wrong with the following code",-1),Yn=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"int"),s(" s1"),n("span",{class:"token punctuation"},","),s(" s2"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"/* create socket for s1, s2 and bind to ports */"),s(`

`),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"recvfrom"),n("span",{class:"token punctuation"},"("),s("s1"),n("span",{class:"token punctuation"},","),s(" buf1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("buf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"recvfrom"),n("span",{class:"token punctuation"},"("),s("s2"),n("span",{class:"token punctuation"},","),s(" buf2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("buf2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br")])],-1),Jn=n("div",{class:"custom-container tip"},[n("p",{class:"custom-container-title"},"Answer"),n("p",null,[s("If client "),n("code",null,"s1"),s(" never send data, the server would blocking wait for "),n("code",null,"s1"),s(" and would never have chance to receive data from "),n("code",null,"s2"),s(".")])],-1),Qn=n("h4",{id:"select-procedure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#select-procedure","aria-hidden":"true"},"#"),s(" select procedure")],-1),$n=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token keyword"},"int"),s(" maxfds"),n("span",{class:"token punctuation"},","),s(` 
    fdset `),n("span",{class:"token operator"},"*"),s("readfds"),n("span",{class:"token punctuation"},","),s(` 
    fd_set `),n("span",{class:"token operator"},"*"),s("writefds"),n("span",{class:"token punctuation"},","),s(` 
    fd_set `),n("span",{class:"token operator"},"*"),s("exceptfds"),n("span",{class:"token punctuation"},","),s(` 
    `),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"timeval"),s(),n("span",{class:"token operator"},"*"),s(`timeout
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"FD_CLR"),s("  "),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},","),s(" fd_set "),n("span",{class:"token operator"},"*"),s("fds"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("  "),n("span",{class:"token comment"},"/* clear the bit for fd in fds */"),s(` 
`),n("span",{class:"token function"},"FD_ISSET"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},","),s(" fd_set "),n("span",{class:"token operator"},"*"),s("fds"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("  "),n("span",{class:"token comment"},"/* is the bit for fd in fds? */"),s(` 
`),n("span",{class:"token function"},"FD_SET"),s("  "),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" fd"),n("span",{class:"token punctuation"},","),s(" fd_set "),n("span",{class:"token operator"},"*"),s("fds"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("  "),n("span",{class:"token comment"},"/* turn on the bit for fd in fds */"),s(` 
`),n("span",{class:"token function"},"FD_ZERO"),s(),n("span",{class:"token punctuation"},"("),s("fd_set "),n("span",{class:"token operator"},"*"),s("fds"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("          "),n("span",{class:"token comment"},"/* clear all bits in fds */"),s(` 
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br")])],-1),ns=n("ul",null,[n("li",null,[n("code",null,"maxfds"),s(": Number of descriptors to be tested "),n("ul",null,[n("li",null,[s("fd (0, 1, ..., "),n("code",null,"maxfds-1"),s(") will be tested.")])])]),n("li",null,[n("code",null,"readfds"),s(": Return a set of fds that are ready to read")]),n("li",null,[n("code",null,"writefds"),s(": Return a set of fds that are ready to write")]),n("li",null,[n("code",null,"exceptfds"),s(": Return a set of fds with exception conditions")]),n("li",null,[n("code",null,"timeout"),s(": "),n("ul",null,[n("li",null,"If it's NULL, then wait forever and return only when one of the fd is ready for I/O"),n("li",null,[s("Otherwise, wait up to "),n("code",null,"timeout")]),n("li",null,[s("Or we can just specify it to 0 in a "),n("strong",null,"while loop")])])])],-1),ss=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"int"),s(" s1"),n("span",{class:"token punctuation"},","),s(" s2"),n("span",{class:"token punctuation"},";"),s(`
fd_set readfds`),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"FD_ZERO"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("readfds"),n("span",{class:"token punctuation"},")"),s("       "),n("span",{class:"token comment"},"/* initialize the fd set */"),s(`
    `),n("span",{class:"token function"},"FD_SET"),n("span",{class:"token punctuation"},"("),s("s1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("readfds"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"/* add s1 to the fd set */"),s(`
    `),n("span",{class:"token function"},"FD_SET"),n("span",{class:"token punctuation"},"("),s("s2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("readfds"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"/* add s2 to the fd set */"),s(`

    `),n("span",{class:"token comment"},"/* use select() for synchronous I/O multiplexing */"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),s("s2"),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("readfds"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"/* notice for s2 + 1 */"),s(`
        `),n("span",{class:"token comment"},"/* set one of the fd in (0, 1, ... s2) */"),s(`
        `),n("span",{class:"token function"},"perror"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"select"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token function"},"exit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"FD_ISSET"),n("span",{class:"token punctuation"},"("),s("s1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("readfds"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token function"},"recvfrom"),n("span",{class:"token punctuation"},"("),s("s1"),n("span",{class:"token punctuation"},","),s(" buf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("buf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"FD_ISSET"),n("span",{class:"token punctuation"},"("),s("s2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("readfds"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token function"},"recvfrom"),n("span",{class:"token punctuation"},"("),s("s2"),n("span",{class:"token punctuation"},","),s(" buf"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"sizeof"),n("span",{class:"token punctuation"},"("),s("buf"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br")])],-1);function as(es,ts){const a=e("RouterLink");return p(),t(l,null,[k,b,n("p",null,[m,o(a,{to:"/courses/cse491-network-application-programming/chapter-2.html#internet-socket"},{default:c(()=>[h]),_:1})]),f,_,g,y,v,w,x,I,P,T,D,S,A,U,C,E,N,F,z,R,O,q,B,G,L,W,M,K,Z,j,H,V,X,Y,J,Q,$,nn,sn,an,en,tn,on,cn,ln,pn,un,rn,dn,kn,bn,mn,hn,fn,_n,gn,yn,vn,wn,xn,In,Pn,Tn,Dn,Sn,An,Un,Cn,En,Nn,Fn,zn,Rn,On,qn,Bn,Gn,Ln,Wn,Mn,Kn,Zn,jn,Hn,Vn,Xn,Yn,Jn,Qn,$n,ns,ss],64)}var ls=u(d,[["render",as]]);export{ls as default};
