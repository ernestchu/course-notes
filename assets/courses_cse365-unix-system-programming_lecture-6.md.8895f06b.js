import{_ as s,c as a,o as n,b as e}from"./app.eea76462.js";const l="/course-notes/assets/sed-flow.d337577d.svg",h=JSON.parse('{"title":"Lecture 6","description":"","frontmatter":{},"headers":[{"level":2,"title":"sed Basic","slug":"sed-basic","link":"#sed-basic","children":[{"level":3,"title":"Useful sed command-line flags","slug":"useful-sed-command-line-flags","link":"#useful-sed-command-line-flags","children":[]}]},{"level":2,"title":"Substitute","slug":"substitute","link":"#substitute","children":[{"level":3,"title":"Common substitute flags","slug":"common-substitute-flags","link":"#common-substitute-flags","children":[]},{"level":3,"title":"Reinsertion","slug":"reinsertion","link":"#reinsertion","children":[]},{"level":3,"title":"Reinsert certain groups","slug":"reinsert-certain-groups","link":"#reinsert-certain-groups","children":[]},{"level":3,"title":"Build grep with sed","slug":"build-grep-with-sed","link":"#build-grep-with-sed","children":[]}]},{"level":2,"title":"More sed","slug":"more-sed","link":"#more-sed","children":[{"level":3,"title":"Nested groups","slug":"nested-groups","link":"#nested-groups","children":[]},{"level":3,"title":"Multiple sed commands","slug":"multiple-sed-commands","link":"#multiple-sed-commands","children":[]},{"level":3,"title":"Run sed command from files","slug":"run-sed-command-from-files","link":"#run-sed-command-from-files","children":[]}]},{"level":2,"title":"sed In Depth","slug":"sed-in-depth","link":"#sed-in-depth","children":[{"level":3,"title":"Pseudo code","slug":"pseudo-code","link":"#pseudo-code","children":[]},{"level":3,"title":"Flow chart","slug":"flow-chart","link":"#flow-chart","children":[]},{"level":3,"title":"Examples","slug":"examples","link":"#examples","children":[]}]},{"level":2,"title":"More sed Actions","slug":"more-sed-actions","link":"#more-sed-actions","children":[{"level":3,"title":"Command separators","slug":"command-separators","link":"#command-separators","children":[]},{"level":3,"title":"Actions that direct to standard output","slug":"actions-that-direct-to-standard-output","link":"#actions-that-direct-to-standard-output","children":[]},{"level":3,"title":"Actions that update the pattern space","slug":"actions-that-update-the-pattern-space","link":"#actions-that-update-the-pattern-space","children":[]},{"level":3,"title":"Compare the y with tr","slug":"compare-the-y-with-tr","link":"#compare-the-y-with-tr","children":[]}]}],"relativePath":"courses/cse365-unix-system-programming/lecture-6.md"}'),o={name:"courses/cse365-unix-system-programming/lecture-6.md"},p=e(`<h1 id="lecture-6" tabindex="-1">Lecture 6 <a class="header-anchor" href="#lecture-6" aria-hidden="true">#</a></h1><h2 id="sed-basic" tabindex="-1"><code>sed</code> Basic <a class="header-anchor" href="#sed-basic" aria-hidden="true">#</a></h2><p><code>sed</code> = <strong>S</strong>tream <strong>Ed</strong>itor. <code>sed</code> uses regex, just like <code>grep</code>. Each line of the input file is processed individually by your <code>sed</code> command.</p><p>You need to tell <code>sed</code>:</p><ol><li>A type of action to perform when matched</li><li>A pattern that you are looking for</li><li>The exact details of the action</li><li>Some flags (not the command-line flags such as <code>sed -n</code>)</li></ol><p>For example</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/exersice/exercise/g</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;">#    \u2502 \u2502        \u2502        \u2502</span></span>
<span class="line"><span style="color:#676E95;">#    \u2502 \u2502        \u2502        \u2514 Flag</span></span>
<span class="line"><span style="color:#676E95;">#    \u2502 \u2502        \u2514 Detail</span></span>
<span class="line"><span style="color:#676E95;">#    \u2502 \u2514 Pattern</span></span>
<span class="line"><span style="color:#676E95;">#    \u2514 Action</span></span>
<span class="line"><span style="color:#676E95;">#</span></span>
<span class="line"><span style="color:#676E95;"># In the s (substitution) action, the detail is</span></span>
<span class="line"><span style="color:#676E95;"># a fixed-string to be substituted with</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Separator</p><p>In the example above, the symbol <code>/</code> separating four areas is called separator. A separator is specified by the <strong>character succeeding</strong> the action (which is <code>s</code> above). You can use symbols that other than <code>/</code> as separators. For example</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s,exersice,exercise,g</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div></div><h3 id="useful-sed-command-line-flags" tabindex="-1">Useful <code>sed</code> command-line flags <a class="header-anchor" href="#useful-sed-command-line-flags" aria-hidden="true">#</a></h3><table><thead><tr><th>Flag</th><th>Description</th></tr></thead><tbody><tr><td><code>-n</code></td><td>No auto-printing of the pattern space</td></tr><tr><td><code>-e</code></td><td>Execute the command sequence specified in the argument following this flag</td></tr><tr><td><code>-f</code></td><td>Obtain a command sequence from a file</td></tr></tbody></table><h2 id="substitute" tabindex="-1">Substitute <a class="header-anchor" href="#substitute" aria-hidden="true">#</a></h2><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">s/</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">pattern</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">/</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">replacement</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">/</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">flags</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>Where the <code>pattern</code> is a regex and the <code>replacement</code> is a fixed-string</p><h3 id="common-substitute-flags" tabindex="-1">Common substitute flags <a class="header-anchor" href="#common-substitute-flags" aria-hidden="true">#</a></h3><table><thead><tr><th>Flag</th><th>Description</th></tr></thead><tbody><tr><td><code>g</code></td><td>Replace all instances of the matches, otherwise <code>sed</code> defaults to the first instance only.</td></tr><tr><td><code>number</code></td><td>Replace only the n<sub>th</sub> instance specified by the <code>number</code>.</td></tr><tr><td><code>p</code></td><td>Print the line if a successful substitution is done. If <code>g</code> is used, print the line after the final substitution.</td></tr></tbody></table><h4 id="flag-g" tabindex="-1">Flag <code>g</code> <a class="header-anchor" href="#flag-g" aria-hidden="true">#</a></h4><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% cat aab_cab_B</span></span>
<span class="line"><span style="color:#A6ACCD;">aab</span></span>
<span class="line"><span style="color:#A6ACCD;">cab</span></span>
<span class="line"><span style="color:#A6ACCD;">B</span></span>
<span class="line"><span style="color:#A6ACCD;">% cat aab_cab_B </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/[ab]/X/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">Xab</span></span>
<span class="line"><span style="color:#A6ACCD;">cXb</span></span>
<span class="line"><span style="color:#A6ACCD;">B</span></span>
<span class="line"><span style="color:#A6ACCD;">% cat aab_cab_B </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/[ab]/X/g</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">XXX</span></span>
<span class="line"><span style="color:#A6ACCD;">cXX</span></span>
<span class="line"><span style="color:#A6ACCD;">B</span></span>
<span class="line"></span></code></pre></div><h4 id="flag-number" tabindex="-1">Flag <code>number</code> <a class="header-anchor" href="#flag-number" aria-hidden="true">#</a></h4><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% cat aab_cab_B </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/[ab]/X/3</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">aaX</span></span>
<span class="line"><span style="color:#A6ACCD;">cab</span></span>
<span class="line"><span style="color:#A6ACCD;">B</span></span>
<span class="line"></span></code></pre></div><h4 id="flag-p" tabindex="-1">Flag <code>p</code> <a class="header-anchor" href="#flag-p" aria-hidden="true">#</a></h4><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% cat aab_cab_B </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/[ab]/X/p</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">Xab</span></span>
<span class="line"><span style="color:#A6ACCD;">Xab</span></span>
<span class="line"><span style="color:#A6ACCD;">cXb</span></span>
<span class="line"><span style="color:#A6ACCD;">cXb</span></span>
<span class="line"><span style="color:#A6ACCD;">B</span></span>
<span class="line"></span></code></pre></div><p>The matched line are duplicate, use <code>p</code> with command-line flag <code>-n</code> instead.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% cat aab_cab_B </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed -n </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/[ab]/X/p</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">Xab</span></span>
<span class="line"><span style="color:#A6ACCD;">cXb</span></span>
<span class="line"></span></code></pre></div><h3 id="reinsertion" tabindex="-1">Reinsertion <a class="header-anchor" href="#reinsertion" aria-hidden="true">#</a></h3><h4 id="reinsert-all-of-the-matched" tabindex="-1">Reinsert all of the matched <a class="header-anchor" href="#reinsert-all-of-the-matched" aria-hidden="true">#</a></h4><p>You can reinsert all of the matched pattern with <code>&amp;</code>, for example</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#%^&amp;12345Hello World123454321</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/[A-Za-z]\\{1,\\}/\\nFound a word: &amp;\\n/g</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;">#%^&amp;12345</span></span>
<span class="line"><span style="color:#A6ACCD;">Found a word: Hello</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">Found a word: World</span></span>
<span class="line"><span style="color:#A6ACCD;">123454321</span></span>
<span class="line"></span></code></pre></div><h3 id="reinsert-certain-groups" tabindex="-1">Reinsert certain groups <a class="header-anchor" href="#reinsert-certain-groups" aria-hidden="true">#</a></h3><p>Same as <code>grep</code>, <code>\\(\\)</code> and <code>\\number</code> can be used on <code>sed</code>.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% cat file </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/\\( p[^ ]*\\)\\( [^p][^ ]*\\)*\\( p[^ ]*\\)/\\1\\3/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">Joe paid people</span></span>
<span class="line"><span style="color:#A6ACCD;">I paid people</span></span>
<span class="line"></span></code></pre></div><h3 id="build-grep-with-sed" tabindex="-1">Build <code>grep</code> with <code>sed</code> <a class="header-anchor" href="#build-grep-with-sed" aria-hidden="true">#</a></h3><h4 id="_1-match" tabindex="-1">1 match <a class="header-anchor" href="#_1-match" aria-hidden="true">#</a></h4><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#676E95;">#!/bin/tcsh</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;"># == 2 </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">    sed -n </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">s/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#C3E88D;">:q/&amp;/p</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">2</span></span>
<span class="line"><span style="color:#89DDFF;">else</span></span>
<span class="line"><span style="color:#A6ACCD;">    sed -n </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">s/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#C3E88D;">:q/&amp;/p</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">endif</span></span>
<span class="line"></span></code></pre></div><h4 id="_2-matches" tabindex="-1">2 matches <a class="header-anchor" href="#_2-matches" aria-hidden="true">#</a></h4><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#676E95;">#!/bin/tcsh</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;"># == 2 </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">    sed -n </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">s/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#C3E88D;">:q/&amp;/2p</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">2</span></span>
<span class="line"><span style="color:#89DDFF;">else</span></span>
<span class="line"><span style="color:#A6ACCD;">    sed -n </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">s/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#C3E88D;">:q/&amp;/2p</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">endif</span></span>
<span class="line"></span></code></pre></div><p>or</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#676E95;">#!/bin/tcsh</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;"># == 2 </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">    sed -n </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">s/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#C3E88D;">:q.*</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#C3E88D;">:q/&amp;/p</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">2</span></span>
<span class="line"><span style="color:#89DDFF;">else</span></span>
<span class="line"><span style="color:#A6ACCD;">    sed -n </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">s/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#C3E88D;">:q.*</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#C3E88D;">:q/&amp;/p</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">endif</span></span>
<span class="line"></span></code></pre></div><h2 id="more-sed" tabindex="-1">More <code>sed</code> <a class="header-anchor" href="#more-sed" aria-hidden="true">#</a></h2><h3 id="nested-groups" tabindex="-1">Nested groups <a class="header-anchor" href="#nested-groups" aria-hidden="true">#</a></h3><p>When backreferencing, the group numbers are defined in the order of their <code>\\(</code> symbol, i.e., where they begin. Consquently, the outer groups come before the inner groups.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% cat file </span></span>
<span class="line"><span style="color:#A6ACCD;">the quick brown fox jumped over the lazy dog</span></span>
<span class="line"><span style="color:#A6ACCD;">% cat file </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s,\\(the \\([a-z]* \\)*the\\),&quot;\\1&quot;,</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">the quick brown fox jumped over the</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> lazy dog</span></span>
<span class="line"><span style="color:#A6ACCD;">% cat file </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s,\\(the \\([a-z]* \\)*the\\),&quot;\\2&quot;,</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">over </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> lazy dog</span></span>
<span class="line"></span></code></pre></div><p>However, if a group was used with the <code>*</code>, regex only backreferences the last match. As you can see above, only <code>over</code> was captured.</p><p>If we want all 5 or those word (quick brown fox jump over) to be captured, the <code>*</code> has to be the left of the <code>\\)</code>, but we the <code>*</code> to be right in order to capture the repetitions! The solution to this is to add the third group.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% cat file </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s,\\(the \\(\\([a-z]* \\)*\\)the\\),&quot;\\2&quot;,</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">quick brown fox jumped over </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> lazy dog</span></span>
<span class="line"></span></code></pre></div><h3 id="multiple-sed-commands" tabindex="-1">Multiple <code>sed</code> commands <a class="header-anchor" href="#multiple-sed-commands" aria-hidden="true">#</a></h3><p>Running multiple <code>sed</code> commands using the semicolon. Let&#39;s say we want to substitute <strong>skiing</strong> with <strong>hiking</strong> and substitute <strong>hiking</strong> with <strong>biking</strong>.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Amy enjoys hiking and Ben enjoys skiing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/skiing/hiking/g; s/hiking/biking/g</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">Amy enjoys biking and Ben enjoys biking</span></span>
<span class="line"></span></code></pre></div><p>Not quite what we want... We was expecting something like</p><p>Amy enjoys biking and Ben enjoys <span style="color:red;">hiking</span></p><p>Let&#39;s see what happend.</p><ol><li><code>sed</code> reads in <code>Amy enjoys hiking and Ben enjoys skiing</code> and execute the first substitution command and <strong>cache</strong> the result in the <strong>pattern space</strong>, which is, <code>Amy enjoys hiking and Ben enjoys hiking</code></li><li>Then the second substitution command is executed on the line in the pattern space, and the result is, <code>Amy enjoys biking and Ben enjoys biking</code></li><li>The result is then written to standard out.</li></ol><p>So we saw that the subsequent commands doesn&#39;t give what we want. We should use a single command instead.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Amy enjoys hiking and Ben enjoys skiing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/hiking\\(.*\\)biking/biking\\1hiking/g</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">Amy enjoys hiking and Ben enjoys skiing</span></span>
<span class="line"></span></code></pre></div><h3 id="run-sed-command-from-files" tabindex="-1">Run <code>sed</code> command from files <a class="header-anchor" href="#run-sed-command-from-files" aria-hidden="true">#</a></h3><p>Use <code>-f</code> command-line flag to specify a <code>sed</code> command file. Let&#39;s see different ways to do this.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> cat Way1 </span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> ----- </span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> cat Way2 </span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> ----- </span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> cat Way3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">s/A/a/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">s/B/b/</span></span>
<span class="line"><span style="color:#A6ACCD;">-----</span></span>
<span class="line"><span style="color:#A6ACCD;">s/A/a/</span></span>
<span class="line"><span style="color:#A6ACCD;">s/B/b/</span></span>
<span class="line"><span style="color:#A6ACCD;">-----</span></span>
<span class="line"><span style="color:#676E95;">#!/usr/bin/sed -f</span></span>
<span class="line"><span style="color:#A6ACCD;">s/A/a/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">s/B/b/</span></span>
<span class="line"></span></code></pre></div><p>Use them</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% cat F</span></span>
<span class="line"><span style="color:#A6ACCD;">ABC</span></span>
<span class="line"><span style="color:#A6ACCD;">% sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/A/a/;s/B/b/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> F</span></span>
<span class="line"><span style="color:#A6ACCD;">abC</span></span>
<span class="line"><span style="color:#A6ACCD;">% sed -f Way1 </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> F</span></span>
<span class="line"><span style="color:#A6ACCD;">abC</span></span>
<span class="line"><span style="color:#A6ACCD;">% sed -f Way2 </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> F</span></span>
<span class="line"><span style="color:#A6ACCD;">abC</span></span>
<span class="line"><span style="color:#A6ACCD;">% ./Way3 </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> F</span></span>
<span class="line"><span style="color:#A6ACCD;">abC</span></span>
<span class="line"></span></code></pre></div><h4 id="exercise" tabindex="-1">Exercise <a class="header-anchor" href="#exercise" aria-hidden="true">#</a></h4><p>We&#39;ve learned so much! Make a sed command file should not be difficult, yet let&#39;s make it even more interesting.</p><p>Problem: what the output?</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> \\#\\!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/usr/bin/sed -f%s/s/@/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> tr </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> tee sedFile\\</span></span>
<span class="line"><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/s/@/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> cat sedFile</span></span>
<span class="line"></span></code></pre></div><p>Hint: In order to use newline in C-shell, I&#39;ve used <code>tr</code> to do the trick.</p><div class="tip custom-block"><p class="custom-block-title">Answer</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">#!/u@r/bin/sed -f</span></span>
<span class="line"><span style="color:#A6ACCD;">@/s/@/</span></span>
<span class="line"><span style="color:#A6ACCD;">#!/usr/bin/sed -f</span></span>
<span class="line"><span style="color:#A6ACCD;">s/s/@/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>You got it?</p></div><p>Now that we&#39;ve created the <code>sed</code> command file, since <code>sed</code> itself is an executable, we can run it directly.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% chmod +x sedFile</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> sss </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> ./sedFile</span></span>
<span class="line"><span style="color:#A6ACCD;">@ss</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Pitfall: Why Doesn&#39;t My sed Script Work?</p><p>Some wrong examples you should avoid</p><ol><li>Forget to add <code>-f</code> at the first line, e.g. <code>#!/usr/bin/sed</code></li><li><code>-f</code> isn&#39;t at the end of the first line, e.g. <code>#!/usr/bin/sed -fn</code><ul><li>Use <code>-nf</code> instead</li></ul></li></ol></div><h2 id="sed-in-depth" tabindex="-1"><code>sed</code> In Depth <a class="header-anchor" href="#sed-in-depth" aria-hidden="true">#</a></h2><p>The implementation of <code>sed</code></p><h3 id="pseudo-code" tabindex="-1">Pseudo code <a class="header-anchor" href="#pseudo-code" aria-hidden="true">#</a></h3><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">EOF</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;"># step 1.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Load the pattern space with the next line from STDIN</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;"># step 2.</span></span>
<span class="line"><span style="color:#A6ACCD;">    foreach </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">subcommand</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> within </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">this sed command</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Use the pattern space as input to the sibcommand</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Do the subcommand, possibly printing to STDOUT</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Put the result into the pattern space</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;"># step 3.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Write the pattern space to STDOUT (if no -n flag)</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="flow-chart" tabindex="-1">Flow chart <a class="header-anchor" href="#flow-chart" aria-hidden="true">#</a></h3><p><img src="`+l+`" alt="sed-flow"></p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h3><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A B C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/B/b/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">A b C </span><span style="color:#676E95;"># printed at step 3, due to no -n</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A B C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/B/b/p</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">A b C </span><span style="color:#676E95;"># step 2, due to the p flag for s subcommand</span></span>
<span class="line"><span style="color:#A6ACCD;">A b C </span><span style="color:#676E95;"># step 3, no -n</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A B C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed -n </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/B/b/p</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">A b C </span><span style="color:#676E95;"># step 2, due to the p flag</span></span>
<span class="line"></span></code></pre></div><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A B C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/B/b/; s/C/c/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">A b c </span><span style="color:#676E95;"># step 3, no -n</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A B C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/B/b/p; s/C/c/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">A b C </span><span style="color:#676E95;"># step 2, p flag, notice the capital C. The second subcommand has not executed yet</span></span>
<span class="line"><span style="color:#A6ACCD;">A b c </span><span style="color:#676E95;"># step 3, no -n</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A B C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed -n </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/B/b/p; s/C/c/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">A b C </span><span style="color:#676E95;"># step 2, p flag</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A B C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/B/b/p; s/C/c/p</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">A b C </span><span style="color:#676E95;"># step 2, 1st iteration</span></span>
<span class="line"><span style="color:#A6ACCD;">A b c </span><span style="color:#676E95;"># step 2, 2nd iteration</span></span>
<span class="line"><span style="color:#A6ACCD;">A b c </span><span style="color:#676E95;"># step 3, no -n</span></span>
<span class="line"></span></code></pre></div><p>What if you want to use double p, <code>pp</code></p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A B C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed -n </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/B/b/pp; s/C/c/p</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">sed: -e expression </span><span style="color:#676E95;">#1, char 8: multiple \`p&#39; options to \`s&#39; command</span></span>
<span class="line"></span></code></pre></div><p>You can&#39;t do that! Thee <code>s</code> command cannot take repeated flags. However, there is a standalone command <code>p</code>, which flush the pattern space to the standard out.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A B C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed -n </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s/B/b/p; p; s/C/c/p</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">A b C </span><span style="color:#676E95;"># step 2, iter 1</span></span>
<span class="line"><span style="color:#A6ACCD;">A b C </span><span style="color:#676E95;"># step 2, iter 2</span></span>
<span class="line"><span style="color:#A6ACCD;">A b c </span><span style="color:#676E95;"># step 2, iter 3</span></span>
<span class="line"></span></code></pre></div><h2 id="more-sed-actions" tabindex="-1">More <code>sed</code> Actions <a class="header-anchor" href="#more-sed-actions" aria-hidden="true">#</a></h2><h3 id="command-separators" tabindex="-1">Command separators <a class="header-anchor" href="#command-separators" aria-hidden="true">#</a></h3><p>Sed commands can be separated by either</p><ul><li>A semicolon</li><li>A newline character (if inside a <code>sed</code> script)</li><li>A <code>\\</code> and a newline character? (Steve said it works in his C-shell, but not in my C-shell)</li></ul><p>Commands can be grouped with <code>{</code> and <code>}</code></p><h3 id="actions-that-direct-to-standard-output" tabindex="-1">Actions that direct to standard output <a class="header-anchor" href="#actions-that-direct-to-standard-output" aria-hidden="true">#</a></h3><table><thead><tr><th>Action</th><th>Description</th></tr></thead><tbody><tr><td>p</td><td>Print the pattern space to STDOUT.</td></tr><tr><td>P</td><td>Print the pattern space to STDOUT, but only up to the first newline character.</td></tr><tr><td>=</td><td>Print the line number to STDOUT.</td></tr><tr><td>i</td><td>Following the i, the rest of the line is a string to insert (i.e., print) to the STDOUT.</td></tr><tr><td>a</td><td>Following the a, the rest of the line is a string. to append to STDOUT after the pattern space gets printed (which happens later).</td></tr><tr><td>c</td><td>Following the c, the rest of the line is a string to print to STDOUT. Afterwards, immediately, start a new cycle for the next line of input.</td></tr></tbody></table><h3 id="actions-that-update-the-pattern-space" tabindex="-1">Actions that update the pattern space <a class="header-anchor" href="#actions-that-update-the-pattern-space" aria-hidden="true">#</a></h3><table><thead><tr><th>Action</th><th>Description</th></tr></thead><tbody><tr><td>s</td><td>Substitute pattern with string.</td></tr><tr><td>z</td><td>\u201CZap\u201D the pattern space (equivalent to: <code>s/.//g</code>).</td></tr><tr><td>y</td><td>Do a tr-like list-based substitution.</td></tr><tr><td>n</td><td>Replace pattern space with the next input line, after printing the old space (unless <code>-n</code>)</td></tr><tr><td>N</td><td>Append the next input line into the pattern space (with a newline inserted before it).</td></tr><tr><td>d</td><td>Delete the pattern space. Immediately start a new cycle for the next line of input.</td></tr><tr><td>D</td><td>If no newline in pattern space, perform a \u201Cd\u201D. Otherwise, delete the pattern space up to first newline, and restart with the resultant pattern space, without reading new input.</td></tr></tbody></table><h3 id="compare-the-y-with-tr" tabindex="-1">Compare the <code>y</code> with <code>tr</code> <a class="header-anchor" href="#compare-the-y-with-tr" aria-hidden="true">#</a></h3><h4 id="tr" tabindex="-1"><code>tr</code> <a class="header-anchor" href="#tr" aria-hidden="true">#</a></h4><ul><li>Allows ranges <ul><li>e.g. <code>tr -d 0-9</code> \u2261 <code>tr -d 013456789</code></li></ul></li><li>Allows paddings in the replacement (latter) string <ul><li>e.g. <code>tr 0-9 01</code> \u2261 <code>tr 0-9 0111111111</code></li></ul></li><li>Ignores excrescent characters in the replacement string <ul><li>e.g. <code>tr 0-9 a-z</code> \u2261 <code>tr 0-9 a-j</code></li></ul></li><li>Uses the last match in the replacement string <ul><li>e.g. <code>tr banana 123456</code> \u2261 <code>tr bna 156</code></li></ul></li></ul><h4 id="sed-y" tabindex="-1"><code>sed y</code> <a class="header-anchor" href="#sed-y" aria-hidden="true">#</a></h4><ul><li>Disallows ranges</li><li>Requires the replacement string to have same size</li><li>Use the first match in the replacement string <ul><li>e.g. <code>sed y/banana/123456/</code> \u2261 <code>sed y/ban/123</code></li></ul></li></ul><h4 id="examples-1" tabindex="-1">Examples <a class="header-anchor" href="#examples-1" aria-hidden="true">#</a></h4><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hi there</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> tr a-z A-Z</span></span>
<span class="line"><span style="color:#A6ACCD;">HI THERE</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hi there</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ</span></span>
<span class="line"><span style="color:#A6ACCD;">HI THERE</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hi there</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y/a-z/A-Z/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">Hi there </span><span style="color:#676E95;"># a-z and A-Z are treated 3-word literal strings</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hi there</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">HI THERE</span></span>
<span class="line"></span></code></pre></div><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> aeiou </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> tr aeiou 12345</span></span>
<span class="line"><span style="color:#A6ACCD;">12345</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> aeiou </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y/aeiou/12345/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">12345</span></span>
<span class="line highlighted"><span style="color:#676E95;"># Same</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> aeiou </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> tr aeiou 1-5</span></span>
<span class="line"><span style="color:#A6ACCD;">12345</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> aeiou </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y/aeiou/1-5/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">sed: -e expression </span><span style="color:#676E95;">#1, char 12: strings for \`y&#39; command are different lengths</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> aeiou </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y/aei/1-5/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">1-5ou</span></span>
<span class="line highlighted"><span style="color:#676E95;"># While tr allows ranges, sed y treats it as literal string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> aeiou </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> tr aeiou 123</span></span>
<span class="line"><span style="color:#A6ACCD;">12333</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> aeiou </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y/aeiou/123/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">sed: -e expression </span><span style="color:#676E95;">#1, char 12: strings for \`y&#39; command are different lengths</span></span>
<span class="line"><span style="color:#676E95;"># While tr pads the latter string, sed y disallows different length</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> aeiou </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> tr aeiouiie 12345678</span></span>
<span class="line"><span style="color:#A6ACCD;">18745</span></span>
<span class="line"><span style="color:#A6ACCD;">% </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> aeiou </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sed </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y/aeiouiie/12345678/</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">12345</span></span>
<span class="line highlighted"><span style="color:#676E95;"># While tr takes the last match, sed y takes the first match</span></span>
<span class="line"></span></code></pre></div><h4 id="exercise-1" tabindex="-1">Exercise <a class="header-anchor" href="#exercise-1" aria-hidden="true">#</a></h4><p>Problem: Simplify the following <code>sed</code> command to the form with <code>/</code> as the separator</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">sed </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">you understand now what it&#39;ll do</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Answer</p><p>What comes after the action is the separator, it&#39;s <code>o</code> in this case. So first, substitute it with <code>/</code></p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">sed </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">y/u understand n/w what it&#39;ll d/</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>Next, remove duplcated matches. Keep the first match only. Also, remove matches that contain same characters.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">sed </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">y/undersa/what i&#39;/</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>Done. The simplest form is obtained. Now we can examine it.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">% cat F</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">% sed </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">you understand now what it&#39;ll do</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> F</span></span>
<span class="line"><span style="color:#A6ACCD;">ihow what ht</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">th?</span></span>
<span class="line highlighted"><span style="color:#C3E88D;">% sed &quot;y/undersa/what i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> F</span></span>
<span class="line"><span style="color:#C3E88D;">ihow what ht&#39;th?</span></span>
<span class="line"></span></code></pre></div></div>`,101),t=[p];function c(r,i,d,D,y,A){return n(),a("div",null,t)}const F=s(o,[["render",c]]);export{h as __pageData,F as default};
