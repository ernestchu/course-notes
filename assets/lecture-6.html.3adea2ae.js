import{c as e,o as a,F as l,a as n,d as s}from"./app.bdc3a143.js";import{_ as t}from"./plugin-vue_export-helper.5a098b48.js";var o="/course-notes/assets/sed-flow.d337577d.svg";const c={},i=n("h1",{id:"lecture-6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lecture-6","aria-hidden":"true"},"#"),s(" Lecture 6")],-1),r=n("h2",{id:"sed-basic",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sed-basic","aria-hidden":"true"},"#"),s(),n("code",null,"sed"),s(" Basic")],-1),u=n("p",null,[n("code",null,"sed"),s(" = "),n("strong",null,"S"),s("tream "),n("strong",null,"Ed"),s("itor. "),n("code",null,"sed"),s(" uses regex, just like "),n("code",null,"grep"),s(". Each line of the input file is processed individually by your "),n("code",null,"sed"),s(" command.")],-1),p=n("p",null,[s("You need to tell "),n("code",null,"sed"),s(":")],-1),d=n("ol",null,[n("li",null,"A type of action to perform when matched"),n("li",null,"A pattern that you are looking for"),n("li",null,"The exact details of the action"),n("li",null,[s("Some flags (not the command-line flags such as "),n("code",null,"sed -n"),s(")")])],-1),b=n("p",null,"For example",-1),h=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/exersice/exercise/g'"),s(`
`),n("span",{class:"token comment"},"#    \u2502 \u2502        \u2502        \u2502"),s(`
`),n("span",{class:"token comment"},"#    \u2502 \u2502        \u2502        \u2514 Flag"),s(`
`),n("span",{class:"token comment"},"#    \u2502 \u2502        \u2514 Detail"),s(`
`),n("span",{class:"token comment"},"#    \u2502 \u2514 Pattern"),s(`
`),n("span",{class:"token comment"},"#    \u2514 Action"),s(`
`),n("span",{class:"token comment"},"#"),s(`
`),n("span",{class:"token comment"},"# In the s (substitution) action, the detail is"),s(`
`),n("span",{class:"token comment"},"# a fixed-string to be substituted with"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br")])],-1),m=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"Separator"),n("p",null,[s("In the example above, the symbol "),n("code",null,"/"),s(" separating four areas is called separator. A separator is specified by the "),n("strong",null,"character succeeding"),s(" the action (which is "),n("code",null,"s"),s(" above). You can use symbols that other than "),n("code",null,"/"),s(" as separators. For example")]),n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s,exersice,exercise,g'"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br")])])],-1),k=n("h3",{id:"useful-sed-command-line-flags",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#useful-sed-command-line-flags","aria-hidden":"true"},"#"),s(" Useful "),n("code",null,"sed"),s(" command-line flags")],-1),g=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"Flag"),n("th",null,"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,[n("code",null,"-n")]),n("td",null,"No auto-printing of the pattern space")]),n("tr",null,[n("td",null,[n("code",null,"-e")]),n("td",null,"Execute the command sequence specified in the argument following this flag")]),n("tr",null,[n("td",null,[n("code",null,"-f")]),n("td",null,"Obtain a command sequence from a file")])])],-1),f=n("h2",{id:"substitute",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#substitute","aria-hidden":"true"},"#"),s(" Substitute")],-1),_=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("s/"),n("span",{class:"token punctuation"},"["),s("pattern"),n("span",{class:"token punctuation"},"]"),s("/"),n("span",{class:"token punctuation"},"["),s("replacement"),n("span",{class:"token punctuation"},"]"),s("/"),n("span",{class:"token punctuation"},"["),s("flags"),n("span",{class:"token punctuation"},"]"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br")])],-1),x=n("p",null,[s("Where the "),n("code",null,"pattern"),s(" is a regex and the "),n("code",null,"replacement"),s(" is a fixed-string")],-1),w=n("h3",{id:"common-substitute-flags",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#common-substitute-flags","aria-hidden":"true"},"#"),s(" Common substitute flags")],-1),v=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"Flag"),n("th",null,"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,[n("code",null,"g")]),n("td",null,[s("Replace all instances of the matches, otherwise "),n("code",null,"sed"),s(" defaults to the first instance only.")])]),n("tr",null,[n("td",null,[n("code",null,"number")]),n("td",null,[s("Replace only the n"),n("sub",null,"th"),s(" instance specified by the "),n("code",null,"number"),s(".")])]),n("tr",null,[n("td",null,[n("code",null,"p")]),n("td",null,[s("Print the line if a successful substitution is done. If "),n("code",null,"g"),s(" is used, print the line after the final substitution.")])])])],-1),y=n("h4",{id:"flag-g",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#flag-g","aria-hidden":"true"},"#"),s(" Flag "),n("code",null,"g")],-1),A=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token function"},"cat"),s(` aab_cab_B
aab
cab
B
% `),n("span",{class:"token function"},"cat"),s(" aab_cab_B "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/[ab]/X/'"),s(`
Xab
cXb
B
% `),n("span",{class:"token function"},"cat"),s(" aab_cab_B "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/[ab]/X/g'"),s(`
XXX
cXX
B
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br")])],-1),B=n("h4",{id:"flag-number",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#flag-number","aria-hidden":"true"},"#"),s(" Flag "),n("code",null,"number")],-1),C=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token function"},"cat"),s(" aab_cab_B "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/[ab]/X/3'"),s(`
aaX
cab
B
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br")])],-1),F=n("h4",{id:"flag-p",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#flag-p","aria-hidden":"true"},"#"),s(" Flag "),n("code",null,"p")],-1),T=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token function"},"cat"),s(" aab_cab_B "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/[ab]/X/p'"),s(`
Xab
Xab
cXb
cXb
B
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br")])],-1),j=n("p",null,[s("The matched line are duplicate, use "),n("code",null,"p"),s(" with command-line flag "),n("code",null,"-n"),s(" instead.")],-1),S=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token function"},"cat"),s(" aab_cab_B "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},"'s/[ab]/X/p'"),s(`
Xab
cXb
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br")])],-1),D=n("h3",{id:"reinsertion",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reinsertion","aria-hidden":"true"},"#"),s(" Reinsertion")],-1),W=n("h4",{id:"reinsert-all-of-the-matched",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reinsert-all-of-the-matched","aria-hidden":"true"},"#"),s(" Reinsert all of the matched")],-1),q=n("p",null,[s("You can reinsert all of the matched pattern with "),n("code",null,"&"),s(", for example")],-1),X=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"#%^&12345Hello World123454321"'),n("span",{class:"token punctuation"},"\\"),s(`
? `),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/[A-Za-z]\\{1,\\}/\\nFound a word: &\\n/g'"),s(`
`),n("span",{class:"token comment"},"#%^&12345"),s(`
Found a word: Hello
 
Found a word: World
`),n("span",{class:"token number"},"123454321"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br")])],-1),H=n("h3",{id:"reinsert-certain-groups",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reinsert-certain-groups","aria-hidden":"true"},"#"),s(" Reinsert certain groups")],-1),E=n("p",null,[s("Same as "),n("code",null,"grep"),s(", "),n("code",null,"\\(\\)"),s(" and "),n("code",null,"\\number"),s(" can be used on "),n("code",null,"sed"),s(".")],-1),I=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token function"},"cat"),s(),n("span",{class:"token function"},"file"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/\\( p[^ ]*\\)\\( [^p][^ ]*\\)*\\( p[^ ]*\\)/\\1\\3/'"),s(`
Joe paid people
I paid people
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br")])],-1),U=n("h3",{id:"build-grep-with-sed",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#build-grep-with-sed","aria-hidden":"true"},"#"),s(" Build "),n("code",null,"grep"),s(" with "),n("code",null,"sed")],-1),z=n("h4",{id:"_1-match",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-match","aria-hidden":"true"},"#"),s(" 1 match")],-1),R=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token shebang important"},"#!/bin/tcsh"),s(`
`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token variable"},"$#"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"then"),s(`
    `),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},[s('"s/'),n("span",{class:"token variable"},"$1"),s(':q/&/p"')]),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token variable"},"$2"),s(`
`),n("span",{class:"token keyword"},"else"),s(`
    `),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},[s('"s/'),n("span",{class:"token variable"},"$1"),s(':q/&/p"')]),s(`
endif
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br")])],-1),$=n("h4",{id:"_2-matches",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-matches","aria-hidden":"true"},"#"),s(" 2 matches")],-1),O=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token shebang important"},"#!/bin/tcsh"),s(`
`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token variable"},"$#"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"then"),s(`
    `),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},[s('"s/'),n("span",{class:"token variable"},"$1"),s(':q/&/2p"')]),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token variable"},"$2"),s(`
`),n("span",{class:"token keyword"},"else"),s(`
    `),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},[s('"s/'),n("span",{class:"token variable"},"$1"),s(':q/&/2p"')]),s(`
endif
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br")])],-1),P=n("p",null,"or",-1),N=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token shebang important"},"#!/bin/tcsh"),s(`
`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token variable"},"$#"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"then"),s(`
    `),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},[s('"s/'),n("span",{class:"token variable"},"$1"),s(":q.*"),n("span",{class:"token variable"},"$1"),s(':q/&/p"')]),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token variable"},"$2"),s(`
`),n("span",{class:"token keyword"},"else"),s(`
    `),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},[s('"s/'),n("span",{class:"token variable"},"$1"),s(":q.*"),n("span",{class:"token variable"},"$1"),s(':q/&/p"')]),s(`
endif
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br")])],-1),L=n("h2",{id:"more-sed",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#more-sed","aria-hidden":"true"},"#"),s(" More "),n("code",null,"sed")],-1),M=n("h3",{id:"nested-groups",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nested-groups","aria-hidden":"true"},"#"),s(" Nested groups")],-1),Y=n("p",null,[s("When backreferencing, the group numbers are defined in the order of their "),n("code",null,"\\("),s(" symbol, i.e., where they begin. Consquently, the outer groups come before the inner groups.")],-1),Z=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token function"},"cat"),s(),n("span",{class:"token function"},"file"),s(` 
the quick brown fox jumped over the lazy dog
% `),n("span",{class:"token function"},"cat"),s(),n("span",{class:"token function"},"file"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},`'s,\\(the \\([a-z]* \\)*the\\),"\\1",'`),s(`
`),n("span",{class:"token string"},'"the quick brown fox jumped over the"'),s(` lazy dog
% `),n("span",{class:"token function"},"cat"),s(),n("span",{class:"token function"},"file"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},`'s,\\(the \\([a-z]* \\)*the\\),"\\2",'`),s(`
`),n("span",{class:"token string"},'"over "'),s(` lazy dog
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br")])],-1),V=n("p",null,[s("However, if a group was used with the "),n("code",null,"*"),s(", regex only backreferences the last match. As you can see above, only "),n("code",null,"over"),s(" was captured.")],-1),J=n("p",null,[s("If we want all 5 or those word (quick brown fox jump over) to be captured, the "),n("code",null,"*"),s(" has to be the left of the "),n("code",null,"\\)"),s(", but we the "),n("code",null,"*"),s(" to be right in order to capture the repetitions! The solution to this is to add the third group.")],-1),K=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token function"},"cat"),s(),n("span",{class:"token function"},"file"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},`'s,\\(the \\(\\([a-z]* \\)*\\)the\\),"\\2",'`),s(`
`),n("span",{class:"token string"},'"quick brown fox jumped over "'),s(` lazy dog
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br")])],-1),G=n("h3",{id:"multiple-sed-commands",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#multiple-sed-commands","aria-hidden":"true"},"#"),s(" Multiple "),n("code",null,"sed"),s(" commands")],-1),Q=n("p",null,[s("Running multiple "),n("code",null,"sed"),s(" commands using the semicolon. Let's say we want to substitute "),n("strong",null,"skiing"),s(" with "),n("strong",null,"hiking"),s(" and substitute "),n("strong",null,"hiking"),s(" with "),n("strong",null,"biking"),s(".")],-1),nn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"Amy enjoys hiking and Ben enjoys skiing"'),n("span",{class:"token punctuation"},"\\"),s(`
? `),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/skiing/hiking/g; s/hiking/biking/g'"),s(`
Amy enjoys biking and Ben enjoys biking
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br")])],-1),sn=n("p",null,"Not quite what we want... We was expecting something like",-1),en=n("p",null,[s("Amy enjoys biking and Ben enjoys "),n("span",{style:{color:"red"}},"hiking")],-1),an=n("p",null,"Let's see what happend.",-1),ln=n("ol",null,[n("li",null,[n("code",null,"sed"),s(" reads in "),n("code",null,"Amy enjoys hiking and Ben enjoys skiing"),s(" and execute the first substitution command and "),n("strong",null,"cache"),s(" the result in the "),n("strong",null,"pattern space"),s(", which is, "),n("code",null,"Amy enjoys hiking and Ben enjoys hiking")]),n("li",null,[s("Then the second substitution command is executed on the line in the pattern space, and the result is, "),n("code",null,"Amy enjoys biking and Ben enjoys biking")]),n("li",null,"The result is then written to standard out.")],-1),tn=n("p",null,"So we saw that the subsequent commands doesn't give what we want. We should use a single command instead.",-1),on=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"Amy enjoys hiking and Ben enjoys skiing"'),n("span",{class:"token punctuation"},"\\"),s(`
? `),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/hiking\\(.*\\)biking/biking\\1hiking/g'"),s(`
Amy enjoys hiking and Ben enjoys skiing
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br")])],-1),cn=n("h3",{id:"run-sed-command-from-files",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#run-sed-command-from-files","aria-hidden":"true"},"#"),s(" Run "),n("code",null,"sed"),s(" command from files")],-1),rn=n("p",null,[s("Use "),n("code",null,"-f"),s(" command-line flag to specify a "),n("code",null,"sed"),s(" command file. Let's see different ways to do this.")],-1),un=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token function"},"cat"),s(" Way1 "),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token builtin class-name"},"echo"),s(" ----- "),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token function"},"cat"),s(" Way2 "),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token builtin class-name"},"echo"),s(" ----- "),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token function"},"cat"),s(` Way3

s/A/a/`),n("span",{class:"token punctuation"},";"),s(`s/B/b/
-----
s/A/a/
s/B/b/
-----
`),n("span",{class:"token comment"},"#!/usr/bin/sed -f"),s(`
s/A/a/`),n("span",{class:"token punctuation"},";"),s(`s/B/b/
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br")])],-1),pn=n("p",null,"Use them",-1),dn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token function"},"cat"),s(` F
ABC
% `),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/A/a/;s/B/b/'"),s(),n("span",{class:"token operator"},"<"),s(` F
abC
% `),n("span",{class:"token function"},"sed"),s(" -f Way1 "),n("span",{class:"token operator"},"<"),s(` F
abC
% `),n("span",{class:"token function"},"sed"),s(" -f Way2 "),n("span",{class:"token operator"},"<"),s(` F
abC
% ./Way3 `),n("span",{class:"token operator"},"<"),s(` F
abC
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br")])],-1),bn=n("h4",{id:"exercise",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#exercise","aria-hidden":"true"},"#"),s(" Exercise")],-1),hn=n("p",null,"We've learned so much! Make a sed command file should not be difficult, yet let's make it even more interesting.",-1),mn=n("p",null,"Problem: what the output?",-1),kn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token punctuation"},"\\"),s("#"),n("span",{class:"token punctuation"},"\\"),n("span",{class:"token operator"},"!"),n("span",{class:"token string"},"'/usr/bin/sed -f%s/s/@/'"),n("span",{class:"token punctuation"},"\\"),s(`
? `),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"tr"),s(),n("span",{class:"token string"},'"%"'),s(),n("span",{class:"token string"},[s('"'),n("span",{class:"token entity",title:"\\n"},"\\n"),s('"')]),n("span",{class:"token punctuation"},"\\"),s(`
? `),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"tee"),s(" sedFile"),n("span",{class:"token punctuation"},"\\"),s(`
? `),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/s/@/'"),n("span",{class:"token punctuation"},";"),n("span",{class:"token punctuation"},"\\"),s(`
? `),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"cat"),s(` sedFile
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br")])],-1),gn=n("p",null,[s("Hint: In order to use newline in C-shell, I've used "),n("code",null,"tr"),s(" to do the trick.")],-1),fn=n("div",{class:"custom-container tip"},[n("p",{class:"custom-container-title"},"Answer"),n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`#!/u@r/bin/sed -f
@/s/@/
#!/usr/bin/sed -f
s/s/@/
`)]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br")])]),n("p",null,"You got it?")],-1),_n=n("p",null,[s("Now that we've created the "),n("code",null,"sed"),s(" command file, since "),n("code",null,"sed"),s(" itself is an executable, we can run it directly.")],-1),xn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token function"},"chmod"),s(` +x sedFile
% `),n("span",{class:"token builtin class-name"},"echo"),s(" sss "),n("span",{class:"token operator"},"|"),s(` ./sedFile
@ss
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br")])],-1),wn=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"Pitfall: Why Doesn't My sed Script Work?"),n("p",null,"Some wrong examples you should avoid"),n("ol",null,[n("li",null,[s("Forget to add "),n("code",null,"-f"),s(" at the first line, e.g. "),n("code",null,"#!/usr/bin/sed")]),n("li",null,[n("code",null,"-f"),s(" isn't at the end of the first line, e.g. "),n("code",null,"#!/usr/bin/sed -fn"),n("ul",null,[n("li",null,[s("Use "),n("code",null,"-nf"),s(" instead")])])])])],-1),vn=n("h2",{id:"sed-in-depth",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sed-in-depth","aria-hidden":"true"},"#"),s(),n("code",null,"sed"),s(" In Depth")],-1),yn=n("p",null,[s("The implementation of "),n("code",null,"sed")],-1),An=n("h3",{id:"pseudo-code",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pseudo-code","aria-hidden":"true"},"#"),s(" Pseudo code")],-1),Bn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("EOF"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"# step 1."),s(`
    `),n("span",{class:"token string"},'"Load the pattern space with the next line from STDIN"'),s(`
    
    `),n("span",{class:"token comment"},"# step 2."),s(`
    foreach `),n("span",{class:"token string"},'"subcommand"'),s(" within "),n("span",{class:"token string"},'"this sed command"'),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token string"},'"Use the pattern space as input to the sibcommand"'),s(`

        `),n("span",{class:"token string"},'"Do the subcommand, possibly printing to STDOUT"'),s(`

        `),n("span",{class:"token string"},'"Put the result into the pattern space"'),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token comment"},"# step 3."),s(`
    `),n("span",{class:"token string"},'"Write the pattern space to STDOUT (if no -n flag)"'),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br")])],-1),Cn=n("h3",{id:"flow-chart",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#flow-chart","aria-hidden":"true"},"#"),s(" Flow chart")],-1),Fn=n("p",null,[n("img",{src:o,alt:"sed-flow"})],-1),Tn=n("h3",{id:"examples",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#examples","aria-hidden":"true"},"#"),s(" Examples")],-1),jn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"A B C"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/B/b/'"),s(`
A b C `),n("span",{class:"token comment"},"# printed at step 3, due to no -n"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"A B C"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/B/b/p'"),s(`
A b C `),n("span",{class:"token comment"},"# step 2, due to the p flag for s subcommand"),s(`
A b C `),n("span",{class:"token comment"},"# step 3, no -n"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"A B C"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},"'s/B/b/p'"),s(`
A b C `),n("span",{class:"token comment"},"# step 2, due to the p flag"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br")])],-1),Sn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"A B C"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/B/b/; s/C/c/'"),s(`
A b c `),n("span",{class:"token comment"},"# step 3, no -n"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"A B C"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/B/b/p; s/C/c/'"),s(`
A b C `),n("span",{class:"token comment"},"# step 2, p flag, notice the capital C. The second subcommand has not executed yet"),s(`
A b c `),n("span",{class:"token comment"},"# step 3, no -n"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"A B C"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},"'s/B/b/p; s/C/c/'"),s(`
A b C `),n("span",{class:"token comment"},"# step 2, p flag"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"A B C"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'s/B/b/p; s/C/c/p'"),s(`
A b C `),n("span",{class:"token comment"},"# step 2, 1st iteration"),s(`
A b c `),n("span",{class:"token comment"},"# step 2, 2nd iteration"),s(`
A b c `),n("span",{class:"token comment"},"# step 3, no -n"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br")])],-1),Dn=n("p",null,[s("What if you want to use double p, "),n("code",null,"pp")],-1),Wn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"A B C"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},"'s/B/b/pp; s/C/c/p'"),s(`
sed: -e expression `),n("span",{class:"token comment"},"#1, char 8: multiple `p' options to `s' command"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br")])],-1),qn=n("p",null,[s("You can't do that! Thee "),n("code",null,"s"),s(" command cannot take repeated flags. However, there is a standalone command "),n("code",null,"p"),s(", which flush the pattern space to the standard out.")],-1),Xn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"A B C"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(" -n "),n("span",{class:"token string"},"'s/B/b/p; p; s/C/c/p'"),s(`
A b C `),n("span",{class:"token comment"},"# step 2, iter 1"),s(`
A b C `),n("span",{class:"token comment"},"# step 2, iter 2"),s(`
A b c `),n("span",{class:"token comment"},"# step 2, iter 3"),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br")])],-1),Hn=n("h2",{id:"more-sed-actions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#more-sed-actions","aria-hidden":"true"},"#"),s(" More "),n("code",null,"sed"),s(" Actions")],-1),En=n("h3",{id:"command-separators",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#command-separators","aria-hidden":"true"},"#"),s(" Command separators")],-1),In=n("p",null,"Sed commands can be separated by either",-1),Un=n("ul",null,[n("li",null,"A semicolon"),n("li",null,[s("A newline character (if inside a "),n("code",null,"sed"),s(" script)")]),n("li",null,[s("A "),n("code",null,"\\"),s(" and a newline character? (Steve said it works in his C-shell, but not in my C-shell)")])],-1),zn=n("p",null,[s("Commands can be grouped with "),n("code",null,"{"),s(" and "),n("code",null,"}")],-1),Rn=n("h3",{id:"actions-that-direct-to-standard-output",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#actions-that-direct-to-standard-output","aria-hidden":"true"},"#"),s(" Actions that direct to standard output")],-1),$n=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"Action"),n("th",null,"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"p"),n("td",null,"Print the pattern space to STDOUT.")]),n("tr",null,[n("td",null,"P"),n("td",null,"Print the pattern space to STDOUT, but only up to the first newline character.")]),n("tr",null,[n("td",null,"="),n("td",null,"Print the line number to STDOUT.")]),n("tr",null,[n("td",null,"i"),n("td",null,"Following the i, the rest of the line is a string to insert (i.e., print) to the STDOUT.")]),n("tr",null,[n("td",null,"a"),n("td",null,"Following the a, the rest of the line is a string. to append to STDOUT after the pattern space gets printed (which happens later).")]),n("tr",null,[n("td",null,"c"),n("td",null,"Following the c, the rest of the line is a string to print to STDOUT. Afterwards, immediately, start a new cycle for the next line of input.")])])],-1),On=n("h3",{id:"actions-that-update-the-pattern-space",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#actions-that-update-the-pattern-space","aria-hidden":"true"},"#"),s(" Actions that update the pattern space")],-1),Pn=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"Action"),n("th",null,"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"s"),n("td",null,"Substitute pattern with string.")]),n("tr",null,[n("td",null,"z"),n("td",null,[s("\u201CZap\u201D the pattern space (equivalent to: "),n("code",null,"s/.//g"),s(").")])]),n("tr",null,[n("td",null,"y"),n("td",null,"Do a tr-like list-based substitution.")]),n("tr",null,[n("td",null,"n"),n("td",null,[s("Replace pattern space with the next input line, after printing the old space (unless "),n("code",null,"-n"),s(")")])]),n("tr",null,[n("td",null,"N"),n("td",null,"Append the next input line into the pattern space (with a newline inserted before it).")]),n("tr",null,[n("td",null,"d"),n("td",null,"Delete the pattern space. Immediately start a new cycle for the next line of input.")]),n("tr",null,[n("td",null,"D"),n("td",null,"If no newline in pattern space, perform a \u201Cd\u201D. Otherwise, delete the pattern space up to first newline, and restart with the resultant pattern space, without reading new input.")])])],-1),Nn=n("h3",{id:"compare-the-y-with-tr",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#compare-the-y-with-tr","aria-hidden":"true"},"#"),s(" Compare the "),n("code",null,"y"),s(" with "),n("code",null,"tr")],-1),Ln=n("h4",{id:"tr",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tr","aria-hidden":"true"},"#"),s(),n("code",null,"tr")],-1),Mn=n("ul",null,[n("li",null,[s("Allows ranges "),n("ul",null,[n("li",null,[s("e.g. "),n("code",null,"tr -d 0-9"),s(" \u2261 "),n("code",null,"tr -d 013456789")])])]),n("li",null,[s("Allows paddings in the replacement (latter) string "),n("ul",null,[n("li",null,[s("e.g. "),n("code",null,"tr 0-9 01"),s(" \u2261 "),n("code",null,"tr 0-9 0111111111")])])]),n("li",null,[s("Ignores excrescent characters in the replacement string "),n("ul",null,[n("li",null,[s("e.g. "),n("code",null,"tr 0-9 a-z"),s(" \u2261 "),n("code",null,"tr 0-9 a-j")])])]),n("li",null,[s("Uses the last match in the replacement string "),n("ul",null,[n("li",null,[s("e.g. "),n("code",null,"tr banana 123456"),s(" \u2261 "),n("code",null,"tr bna 156")])])])],-1),Yn=n("h4",{id:"sed-y",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sed-y","aria-hidden":"true"},"#"),s(),n("code",null,"sed y")],-1),Zn=n("ul",null,[n("li",null,"Disallows ranges"),n("li",null,"Requires the replacement string to have same size"),n("li",null,[s("Use the first match in the replacement string "),n("ul",null,[n("li",null,[s("e.g. "),n("code",null,"sed y/banana/123456/"),s(" \u2261 "),n("code",null,"sed y/ban/123")])])])],-1),Vn=n("h4",{id:"examples-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#examples-1","aria-hidden":"true"},"#"),s(" Examples")],-1),Jn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"Hi there"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"tr"),s(` a-z A-Z
HI THERE
% `),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"Hi there"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"tr"),s(` abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
HI THERE
% `),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"Hi there"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'y/a-z/A-Z/'"),s(`
Hi there `),n("span",{class:"token comment"},"# a-z and A-Z are treated 3-word literal strings"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token string"},'"Hi there"'),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'"),s(`
HI THERE
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br")])],-1),Kn=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[s("% "),n("span",{class:"token builtin class-name"},"echo"),s(" aeiou "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"tr"),s(" aeiou "),n("span",{class:"token number"},"12345"),s(`
`),n("span",{class:"token number"},"12345"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(" aeiou "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'y/aeiou/12345/'"),s(`
`),n("span",{class:"token number"},"12345"),s(`
`),n("span",{class:"token comment"},"# Same"),s(`

% `),n("span",{class:"token builtin class-name"},"echo"),s(" aeiou "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"tr"),s(" aeiou "),n("span",{class:"token number"},"1"),s(`-5
`),n("span",{class:"token number"},"12345"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(" aeiou "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'y/aeiou/1-5/'"),s(`
sed: -e expression `),n("span",{class:"token comment"},"#1, char 12: strings for `y' command are different lengths"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(" aeiou "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'y/aei/1-5/'"),s(`
`),n("span",{class:"token number"},"1"),s(`-5ou
`),n("span",{class:"token comment"},"# While tr allows ranges, sed y treats it as literal string"),s(`

% `),n("span",{class:"token builtin class-name"},"echo"),s(" aeiou "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"tr"),s(" aeiou "),n("span",{class:"token number"},"123"),s(`
`),n("span",{class:"token number"},"12333"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(" aeiou "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'y/aeiou/123/'"),s(`
sed: -e expression `),n("span",{class:"token comment"},"#1, char 12: strings for `y' command are different lengths"),s(`
`),n("span",{class:"token comment"},"# While tr pads the latter string, sed y disallows different length"),s(`

% `),n("span",{class:"token builtin class-name"},"echo"),s(" aeiou "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"tr"),s(" aeiouiie "),n("span",{class:"token number"},"12345678"),s(`
`),n("span",{class:"token number"},"18745"),s(`
% `),n("span",{class:"token builtin class-name"},"echo"),s(" aeiou "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},"'y/aeiouiie/12345678/'"),s(`
`),n("span",{class:"token number"},"12345"),s(`
`),n("span",{class:"token comment"},"# While tr takes the last match, sed y takes the first match"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"},"\xA0"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"},"\xA0"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"},"\xA0")]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br")])],-1),Gn=n("h4",{id:"exercise-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#exercise-1","aria-hidden":"true"},"#"),s(" Exercise")],-1),Qn=n("p",null,[s("Problem: Simplify the following "),n("code",null,"sed"),s(" command to the form with "),n("code",null,"/"),s(" as the separator")],-1),ns=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},`"you understand now what it'll do"`),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br")])],-1),ss=n("div",{class:"custom-container tip"},[n("p",{class:"custom-container-title"},"Answer"),n("p",null,[s("What comes after the action is the separator, it's "),n("code",null,"o"),s(" in this case. So first, substitute it with "),n("code",null,"/")]),n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},`"y/u understand n/w what it'll d/"`),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br")])]),n("p",null,"Next, remove duplcated matches. Keep the first match only. Also, remove matches that contain same characters."),n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sed"),s(),n("span",{class:"token string"},`"y/undersa/what i'/"`),s(`
`)])]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br")])]),n("p",null,"Done. The simplest form is obtained. Now we can examine it."),n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`% cat F
% sed "you understand now what it'll do" F
ihow what ht'th?
% sed "y/undersa/what i'/" F
ihow what ht'th?
`)]),n("div",{class:"highlight-lines"},[n("br"),n("div",{class:"highlight-line"},"\xA0"),n("br"),n("div",{class:"highlight-line"},"\xA0"),n("br")]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br")])])],-1);function es(as,ls){return a(),e(l,null,[i,r,u,p,d,b,h,m,k,g,f,_,x,w,v,y,A,B,C,F,T,j,S,D,W,q,X,H,E,I,U,z,R,$,O,P,N,L,M,Y,Z,V,J,K,G,Q,nn,sn,en,an,ln,tn,on,cn,rn,un,pn,dn,bn,hn,mn,kn,gn,fn,_n,xn,wn,vn,yn,An,Bn,Cn,Fn,Tn,jn,Sn,Dn,Wn,qn,Xn,Hn,En,In,Un,zn,Rn,$n,On,Pn,Nn,Ln,Mn,Yn,Zn,Vn,Jn,Kn,Gn,Qn,ns,ss],64)}var cs=t(c,[["render",es]]);export{cs as default};
