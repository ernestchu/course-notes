import{_ as n,c as t,a as e,b as o,d as a,o as s}from"./app.eea76462.js";const i="/course-notes/assets/figure-2-2.97502eff.png",r="/course-notes/assets/figure-ycwang-1.7b41ee82.png",l="/course-notes/assets/figure-2-3.72d57dcf.png",T="/course-notes/assets/figure-2-4.042b4245.jpeg",d="/course-notes/assets/figure-2-5.86da6852.jpeg",Q="/course-notes/assets/figure-2-6.6dffab18.jpeg",h="/course-notes/assets/figure-2-7.3d5e6e58.jpeg",c="/course-notes/assets/figure-2-8.acd85b94.jpeg",p="/course-notes/assets/figure-2-9.02000c6c.jpeg",m="/course-notes/assets/figure-2-10.f63080e8.jpeg",g="/course-notes/assets/mail.18e99211.png",u="/course-notes/assets/figure-2-11.07dac940.jpeg",f="/course-notes/assets/figure-2-12.ebf56e98.jpeg",w="/course-notes/assets/figure-2-13.895c9246.jpeg",y="/course-notes/assets/figure-2-14.677fab2f.jpeg",v="/course-notes/assets/figure-2-15.e99f0de1.jpeg",Y1=JSON.parse(`{"title":"Application Layer","description":"","frontmatter":{},"headers":[{"level":2,"title":"Principles of Network Applications","slug":"principles-of-network-applications","link":"#principles-of-network-applications","children":[{"level":3,"title":"Network Application Architectures","slug":"network-application-architectures","link":"#network-application-architectures","children":[]},{"level":3,"title":"Processes Communicating","slug":"processes-communicating","link":"#processes-communicating","children":[]},{"level":3,"title":"Transport Services Available to Applications","slug":"transport-services-available-to-applications","link":"#transport-services-available-to-applications","children":[]},{"level":3,"title":"Transport Services Provided by the Internet","slug":"transport-services-provided-by-the-internet","link":"#transport-services-provided-by-the-internet","children":[]}]},{"level":2,"title":"The Web and HTTP","slug":"the-web-and-http","link":"#the-web-and-http","children":[{"level":3,"title":"Overview of HTTP","slug":"overview-of-http","link":"#overview-of-http","children":[]},{"level":3,"title":"Non-Persistent and Persistent Connections","slug":"non-persistent-and-persistent-connections","link":"#non-persistent-and-persistent-connections","children":[]},{"level":3,"title":"HTTP Message Format","slug":"http-message-format","link":"#http-message-format","children":[]},{"level":3,"title":"User-Server Interaction: Cookies","slug":"user-server-interaction-cookies","link":"#user-server-interaction-cookies","children":[]},{"level":3,"title":"Web Caching","slug":"web-caching","link":"#web-caching","children":[]}]},{"level":2,"title":"Electronic Mail in the Internet","slug":"electronic-mail-in-the-internet","link":"#electronic-mail-in-the-internet","children":[{"level":3,"title":"SMTP","slug":"smtp","link":"#smtp","children":[]},{"level":3,"title":"Comparison with HTTP","slug":"comparison-with-http","link":"#comparison-with-http","children":[]},{"level":3,"title":"Mail Access Protocols","slug":"mail-access-protocols","link":"#mail-access-protocols","children":[]}]},{"level":2,"title":"DNS\u2013The Internet's Directory Service","slug":"dns\u2013the-internet-s-directory-service","link":"#dns\u2013the-internet-s-directory-service","children":[{"level":3,"title":"Services Provided by DNS","slug":"services-provided-by-dns","link":"#services-provided-by-dns","children":[]},{"level":3,"title":"Overview of How DNS Works","slug":"overview-of-how-dns-works","link":"#overview-of-how-dns-works","children":[]},{"level":3,"title":"DNS Records and Messages","slug":"dns-records-and-messages","link":"#dns-records-and-messages","children":[]}]},{"level":2,"title":"Peer-to-Peer File Distribution","slug":"peer-to-peer-file-distribution","link":"#peer-to-peer-file-distribution","children":[{"level":3,"title":"Scalability of P2P architectures","slug":"scalability-of-p2p-architectures","link":"#scalability-of-p2p-architectures","children":[]},{"level":3,"title":"BitTorrent","slug":"bittorrent","link":"#bittorrent","children":[]}]}],"relativePath":"courses/cse350-computer-network/chapter-2.md"}`),b={name:"courses/cse350-computer-network/chapter-2.md"},_=o('<h1 id="application-layer" tabindex="-1">Application Layer <a class="header-anchor" href="#application-layer" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#principles-of-network-applications">Principles of Network Applications</a><ul><li><a href="#network-application-architectures">Network Application Architectures</a></li><li><a href="#processes-communicating">Processes Communicating</a></li><li><a href="#transport-services-available-to-applications">Transport Services Available to Applications</a></li><li><a href="#transport-services-provided-by-the-internet">Transport Services Provided by the Internet</a></li></ul></li><li><a href="#the-web-and-http">The Web and HTTP</a><ul><li><a href="#overview-of-http">Overview of HTTP</a></li><li><a href="#non-persistent-and-persistent-connections">Non-Persistent and Persistent Connections</a></li><li><a href="#http-message-format">HTTP Message Format</a></li><li><a href="#user-server-interaction-cookies">User-Server Interaction: Cookies</a></li><li><a href="#web-caching">Web Caching</a></li></ul></li><li><a href="#electronic-mail-in-the-internet">Electronic Mail in the Internet</a><ul><li><a href="#smtp">SMTP</a></li><li><a href="#comparison-with-http">Comparison with HTTP</a></li><li><a href="#mail-access-protocols">Mail Access Protocols</a></li></ul></li><li><a href="#dns\u2013the-internet-s-directory-service">DNS\u2013The Internet&#39;s Directory Service</a><ul><li><a href="#services-provided-by-dns">Services Provided by DNS</a></li><li><a href="#overview-of-how-dns-works">Overview of How DNS Works</a></li><li><a href="#dns-records-and-messages">DNS Records and Messages</a></li></ul></li><li><a href="#peer-to-peer-file-distribution">Peer-to-Peer File Distribution</a><ul><li><a href="#scalability-of-p2p-architectures">Scalability of P2P architectures</a></li><li><a href="#bittorrent">BitTorrent</a></li></ul></li></ul></nav><p>If we couldn&#39;t conceive of any useful applications, there wouldn&#39;t be any need for networking infrastructure and protocols to support them. Since the Internet&#39;s inception, numerous useful and entertaining applications have indeed been created. These applications have been the driving force behind the Internet&#39;s success, motivating people in homes, school, governments, and businesses to make the Internet an integral part of their daily activities.</p><h2 id="principles-of-network-applications" tabindex="-1">Principles of Network Applications <a class="header-anchor" href="#principles-of-network-applications" aria-hidden="true">#</a></h2><p>When developing your new applications, the software could be written, for example, in C, Java, or Python. You do not need to (and cannot) write software that runs on network-core devices, such as routers or link-layer switches. As we learned in chapter 1, network-core do not function at the application layer but lower layers (the network layer and below). This confines <strong>application software</strong> to the <strong>end systems</strong>.</p><h3 id="network-application-architectures" tabindex="-1">Network Application Architectures <a class="header-anchor" href="#network-application-architectures" aria-hidden="true">#</a></h3><h4 id="client-server-architecture" tabindex="-1">Client-server architecture <a class="header-anchor" href="#client-server-architecture" aria-hidden="true">#</a></h4><p>A <strong>server</strong> is always-on and services requests from many other hosts, called <strong>client</strong>. In such architecture, clients do not directly communicate with each other; for example, in Web application, two browsers do not directly communicate.</p><p>Another characteristic of the client-server architecture is that the server has a <strong>fixed</strong>, well-known address, called an IP address. Since it&#39;s always-on clients can always contact the server by sending a packet to the server&#39;s IP address. Some of the better-known applications with such architecture include the Web, FTP, Telnet and e-mail.</p><p><img src="'+i+'" alt="figure-2-2"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><h5 id="data-center" tabindex="-1">Data center <a class="header-anchor" href="#data-center" aria-hidden="true">#</a></h5><p>The most popular Internet services\u2013such as</p><ul><li>Search engines <ul><li>Google</li><li>Bing</li></ul></li><li>Internet commerce <ul><li>Amazon</li><li>eBay</li></ul></li><li>Web-based email <ul><li>Gmail</li><li>Yahoo Mail</li></ul></li><li>Social networking <ul><li>Facebook</li><li>Instagram</li><li>Twitter</li><li>YouTube</li></ul></li></ul><p>If each of them has only one server handling all of its requests, it can quickly become overwhelmed. For this reason, these services employ one or more <strong>data center</strong>. A data center can have hundreds of thousands of servers, which must be powered, maintained, and <strong>cooled down</strong>. In fact, the cost to cool down all these servers, i.e., computers, is way higher than the electricity bills. Companies like Microsoft actually seals their data centers and drop them into the oceans to cool them down at a low cost.</p><h4 id="p2p-architecture" tabindex="-1">P2P architecture <a class="header-anchor" href="#p2p-architecture" aria-hidden="true">#</a></h4><p>Instead of the reliance on dedicated servers in data center, the application exploits direct communication between pairs of intermittently connected hosts, called <strong>peers</strong>, which mostly reside in homes, universities, and offices. Because the peers communicate without passing through a dedicated server, the architecture is called peer-to-peer. Many of today\u2019s most popular and traffic-intensive applications are based on P2P architectures. These applications include</p><ul><li>File sharing \u2013 BitTorrent</li><li>Peer-assisted download acceleration \u2013 Xunlei</li><li>Internet telephony and video conference <ul><li>Skype</li><li>Zoom (hybrid)</li></ul></li></ul><p>Because of COVID-19, Zoom has earned a considerable fame. It&#39;s partly because of its support of both cloud-based and P2P architectures. Besides Zoom, many instant messaging applications also employ the hybrid architecture, with servers are used to track the IP addresses of users, but user-to-user messages are sent directly between user hosts. Without passing through intermediate servers, they provide a better security guarantee. Sadly, one of the biggest messaging application, <strong>LINE</strong> is not one of them, thus LINE has full control over the messages between users.</p><p>One of the most compelling features of P2P architectures is their <strong>self-scalability</strong>. For example, in a P2P file-sharing application, although each peer generates workload by requesting files, each peer also adds service capacity to the system by distributing files to other peers. P2P architectures are also cost effective, since they normally don\u2019t require significant server infrastructure and server bandwidth (in contrast with clients-server designs with data centers). However, P2P applications face challenges of security, performance, reliability, and of course, copyright issue due to their highly decentralized structure.</p><h3 id="processes-communicating" tabindex="-1">Processes Communicating <a class="header-anchor" href="#processes-communicating" aria-hidden="true">#</a></h3><p>It&#39;s not actually your programs but <strong>processes</strong> that communicate. When processes are running on the same device, they can communicate with each other with interprocess communications, using rules that are governed by the operating system (usually through the kernel). With the same analogy, processes on two different end systems communicate by the Internet bridge between two kernels.</p><p><img src="'+r+'" alt="figure-ycwang-1"></p><blockquote><p>Image credit to Prof. Y.C. Wang</p></blockquote><h4 id="client-and-server-processes" tabindex="-1">Client and Server Processes <a class="header-anchor" href="#client-and-server-processes" aria-hidden="true">#</a></h4><p>For each pair of communicating processes, we typically label one of them as the <strong>client</strong> and the other process as the <strong>server</strong>.</p><table><thead><tr><th>Application</th><th>Client</th><th>Server</th></tr></thead><tbody><tr><td>Web</td><td>Browser</td><td>Web server</td></tr><tr><td>P2P file-sharing</td><td>Peer that downloading files</td><td>Peer that uploading files</td></tr></tbody></table><p>You may find that in some applications, such as in P2P file sharing, a process can be bith a client and a server. Indeed, a process in a P2P file-sharing system can both upload and download files. Nevertheless, we can still label the processes as the client and the server.</p><h5 id="definition" tabindex="-1">Definition <a class="header-anchor" href="#definition" aria-hidden="true">#</a></h5><blockquote><p>In the context of a communication session between a pair of processes, the process that initiates the communication (that is, initially contacts the other process at the beginning of the session) is labeled as the client. The process that waits to be contacted to begin the session is the server.</p></blockquote><h5 id="client" tabindex="-1">Client <a class="header-anchor" href="#client" aria-hidden="true">#</a></h5><ul><li>Communicate with server</li><li>May be intermittently connected</li><li>May have dynamic IP address</li><li>Do not communicate directly with each other</li></ul><h5 id="server" tabindex="-1">Server <a class="header-anchor" href="#server" aria-hidden="true">#</a></h5><ul><li>Always-on host</li><li>Permanent IP address</li><li>Data center for scaling</li></ul><h4 id="the-interface-between-the-process-and-the-computer-network" tabindex="-1">The interface between the process and the computer network <a class="header-anchor" href="#the-interface-between-the-process-and-the-computer-network" aria-hidden="true">#</a></h4><p>A process sends messages into, and receives message from, the network through a software interface called a <strong>socket</strong></p><p><img src="'+l+'" alt="figure-2-3"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><p>As shown in the figure, a socket is the interface between the application layer and the transport layer within a host. It&#39;s also referred to as the <strong>Application Programming Interface (API)</strong> between the application and the network. The application developer has control of everything on the application-layer side of the socket but has little control of the transport-layer side of the socket.</p><blockquote><p>Just like in ML frameworks, such as Pytorch, you have control over the network structure, training procedures, etc. But you don&#39;t have to bother with how the gradients are computed.</p></blockquote><p>The only control that the application developer has on the transport-layer side is</p><ol><li>The choice of transport protocol (TCP/UDP)</li><li>The ability to fix a few transport-layer parameters such as maximum buffer and maximum segment sizes</li></ol><h4 id="addressing-processes" tabindex="-1">Addressing processes <a class="header-anchor" href="#addressing-processes" aria-hidden="true">#</a></h4><p>To identify the receiving process, two pieces of information need to be specified</p><ol><li>The address of the host (IP address)</li><li>An identifier that specifies the receiving process in the destination host (port number)</li></ol><p>The <strong>IP address</strong> is where your computer located in the Internet. However, in general a computer could be running many network applications. A destination <strong>port number</strong> serves this purpose. Popular applications have been assigned specific port numbers</p><table><thead><tr><th>Service name</th><th>Port</th></tr></thead><tbody><tr><td>FTP</td><td>20, 21</td></tr><tr><td>SSH</td><td>22</td></tr><tr><td>Telnet</td><td>23</td></tr><tr><td>SMTP</td><td>25</td></tr><tr><td>DNS</td><td>53</td></tr><tr><td>HTTP</td><td>80</td></tr><tr><td>HTTPS (HTTP with SSL)</td><td>443</td></tr><tr><td>FTP over SSL/TLS</td><td>989, 990</td></tr></tbody></table><h3 id="transport-services-available-to-applications" tabindex="-1">Transport Services Available to Applications <a class="header-anchor" href="#transport-services-available-to-applications" aria-hidden="true">#</a></h3><p>What are the services that a transport-layer protocol can offer to applications invoking it? We can broadly classify the possible services along four dimensions</p><ol><li>Reliable data transfer (data integrity)</li><li>Throughput (bandwidth)</li><li>Timing (latency, delay)</li><li>Security</li></ol><h4 id="reliable-data-transfer" tabindex="-1">Reliable data transfer <a class="header-anchor" href="#reliable-data-transfer" aria-hidden="true">#</a></h4><p>If a protocol provides such a guaranteed data delivery service, it is said to provide <strong>reliable data transfer</strong>. When a transfer protocol provides this service, the sending process can just pass its data into the socket and know with complete confidence that the data will arrive without errors at the receiving process.</p><p>In contrast, when a transport-layer protocol doesn&#39;t provide reliable data transfer, some of the data sent by the sending process may never arrive at the receiving process. This may be acceptable for <strong>loss-tolerant applications</strong>, such as multimedia streaming, lost data might result in a small glitch in the audio/video\u2013not a crucial impairment.</p><h4 id="throughput" tabindex="-1">Throughput <a class="header-anchor" href="#throughput" aria-hidden="true">#</a></h4>',54),H=a("Because many sessions share the bandwidth along the network path, the available throughput can fluctuate with time. This leads to a natural service that a transport-layer protocol could provide, namely, guaranteed available throughput at some specified rate. With such a service, the application could request a guaranteed throughput of "),x={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},D={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.02ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 451 453"},k=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})])])],-1),A=[k],C=a(" bits/sec, and then the transport protocol would then ensure that the available throughput is always at least "),L={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},S={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.02ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 451 453"},P=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})])])],-1),M=[P],I=a(" bits/sec."),V=o(`<p>Such a guaranteed throughput service would greatly appeal to many applications. For example, Internet audio/video telephony application encodes data at a fixed rate. It needs to send data into the network and have data delivered to the receiving application at this rate. Since in a call, data is generated every second. If the network can not keep up with that rate, the telephony service would be of no use.</p><p>Some application, like YouTube, use adaptive coding techniques to encode digitized video at a rate that matches the currently available throughput. So if an instant throughput can only support the quality of 360p, YouTube will set it to 360p to guarantee a steady playback.</p><p>While bandwidth-sensitive applications have specific throughput requirements, <strong>elastic applications</strong> can make use of as much, or as little, throughput as happens to be available. The most pervasive example is nothing but downloading files. Of course, the more throughput, the faster download rate.</p><h4 id="timing" tabindex="-1">Timing <a class="header-anchor" href="#timing" aria-hidden="true">#</a></h4><p>An example guarantee might be that every bit that the sender pumps into the socket arrives at the receiver\u2019s socket no more than 100 msec later. Such a service would be appealing to interactive real-time applications, such as Internet telephony and multiplayer games. Like in the popular game, League of Legends, the ping value indicated the time it takes for data to travel between your computer and the game server. If the latency is too high, you might encounter a unpleasant gameplay experience as every skill you cask would take affect after 1 second.</p><h4 id="security" tabindex="-1">Security <a class="header-anchor" href="#security" aria-hidden="true">#</a></h4><p>A transport protocol can encrypt all data transmitted by the sending process; and in the receiving host, the transport-layer protocol can decrypt the data before delivering the data to the reviving process. Such a service would provide confidentiality between the two processes, even if the data is somehow observed between sending and receiving processes.</p><h3 id="transport-services-provided-by-the-internet" tabindex="-1">Transport Services Provided by the Internet <a class="header-anchor" href="#transport-services-provided-by-the-internet" aria-hidden="true">#</a></h3><h4 id="tcp-services" tabindex="-1">TCP services <a class="header-anchor" href="#tcp-services" aria-hidden="true">#</a></h4><h5 id="connection-oriented-service" tabindex="-1">Connection-oriented service <a class="header-anchor" href="#connection-oriented-service" aria-hidden="true">#</a></h5><p>TCP has the client and server exchange transport-layer control information with each other <strong>before</strong> the application-level messages begin to flow. This so-called handshaking procedure alerts the client and server, allowing them to prepare for an onslaught of packets. After the handshaking phase, a <strong>TCP connection</strong> is said to exist between the sockets of the two processes. The connection is a full-duplex connection in that the two processes can send messages to each other over the connection at the same time. When the application finishes sending messages, it must tear down the connection.</p><h5 id="reliable-data-transfer-service" tabindex="-1">Reliable data transfer service <a class="header-anchor" href="#reliable-data-transfer-service" aria-hidden="true">#</a></h5><p>The communicating processes can rely on TCP to deliver all data sent without error and in the proper order. When one side of the application passes a stream of bytes into a socket, it can count on TCP to deliver the same stream of bytes to the receiving socket, with no missing or duplicate bytes.</p><table><thead><tr><th>Application</th><th>Data Loss</th><th>Throughput</th><th>Time-Sensitive</th></tr></thead><tbody><tr><td>File transfer/download</td><td>No loss</td><td>Elastic</td><td>No</td></tr><tr><td>E-mail</td><td>No loss</td><td>Elastic</td><td>No</td></tr><tr><td>Web document</td><td>No loss</td><td>Elastic (few kbps)</td><td>No</td></tr><tr><td>Internet telephony</td><td>Loss-tolerant</td><td>few kbps-1Mbps</td><td>100ms</td></tr><tr><td>Video conferencing</td><td>Loss-tolerant</td><td>10kbps-5Mbps</td><td>100ms</td></tr><tr><td>Streaming audio/video</td><td>Loss-tolerant</td><td>same as above</td><td>few seconds</td></tr><tr><td>Interactive games</td><td>Loss-tolerant</td><td>few kbps-10kbps</td><td>50ms</td></tr><tr><td>Smartphone messaging</td><td>No loss</td><td>Elastic</td><td>No more than 10 min</td></tr></tbody></table><p>TCP also includes a congestion-control mechanism, which throttles a sending process when the network is <strong>congested</strong> between sender and receiver to prevent packet loss. It also attempts to limit each TCP connection to its fair share of network bandwidth.</p><h5 id="secure-sockets-layer-ssl" tabindex="-1">Secure sockets layer (SSL) <a class="header-anchor" href="#secure-sockets-layer-ssl" aria-hidden="true">#</a></h5><p>SSL is not another Internet transport protocol but instead is an enhancement of TCP, with the enhancements being implemented in the application layer. In particular, if an application wants to use the services of SSL, it needs to include SSL libraries in both the client and server sides of the application. When an application uses SSL</p><ol><li>The sending process passes the encrypted data to the TCP socket.</li><li>The encrypted data travels over the Internet to the TCP socket in the receiving process.</li><li>The receiving socket passes the encrypted data to SSL, which decrypts the data.</li><li>SSL passes the clear text data through its SSL socket to the receiving process.</li></ol><h4 id="udp-services" tabindex="-1">UDP services <a class="header-anchor" href="#udp-services" aria-hidden="true">#</a></h4><p>UDP is connectionless, so there is no handshaking before the two processes start to communicate. UDP provides an unreliable data transfer service\u2013that is, UDP provides no guarantee that the message will ever reach the receiving process. Furthermore, messages may arrive out of order. UDP also does not include a congestion-control mechanism, so the sending side of UDP can pump data into the layer below at any rate it please.</p><h4 id="services-not-provided-by-internet-transport-protocols" tabindex="-1">Services not provided by Internet transport protocols <a class="header-anchor" href="#services-not-provided-by-internet-transport-protocols" aria-hidden="true">#</a></h4><p>Let&#39;s recap four services motioned above</p><ol><li>Reliable data transfer</li><li>Throughput</li><li>Timing</li><li>Security</li></ol><p>We have already noted that TCP provides reliable end-to-end data transfer and security services through SSL. How about the other two services? Throughput and timing. Today&#39;s Internet can often provide satisfactory service to time-sensitive applications, but it cannot provide nay timing or throughput guarantees.</p><p>Typically, e-mail, SSH, the Web, and file transfer all use TCP. These application have chosen it basically because TCP provides reliable data transfer, guaranteeing that all data will eventually get to its destination. On the other hand, Internet telephony application (such as Skype) can often tolerate some loss but require a minimal rate to be effective. Developers of which prefer to run their applications over UDP. However, because many firewalls are configured to block UDP traffic, Internet telephony applications often are designed to use TCP as a backup if UDP communication fails.</p><h2 id="the-web-and-http" tabindex="-1">The Web and HTTP <a class="header-anchor" href="#the-web-and-http" aria-hidden="true">#</a></h2><h3 id="overview-of-http" tabindex="-1">Overview of HTTP <a class="header-anchor" href="#overview-of-http" aria-hidden="true">#</a></h3><p>The <strong>HyperText</strong> Transfer Protocol (HTTP), the Web&#39;s application-layer protocol, is at the heart of the Web. It&#39;s implemented in two programs: a client program and a server program. HTTP defines the structure of these messages and how the client and server exchange the messages.</p><p>A Web page consists of objects. An object is simply a file, typically <strong>HTML</strong> file, a JPEG image or a JavaScript. Each object is addressable by a <strong>URL</strong>, e.g.</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">http://www.hsnl.cse.nsysu.edu.tw/wklai/index.html</span></span>
<span class="line"><span style="color:#A6ACCD;">|__|   |_______________________||_______________|</span></span>
<span class="line"><span style="color:#A6ACCD;"> \u2514\u2500\u2500&gt; protocol \u2514\u2500\u2500&gt; host name       \u2514\u2500\u2500&gt; path name</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>The host name can be resolved into an IP address for a server, while the path name typically reflects the actually file structure on that server. The file name <code>index.html</code> is for a special file which can be addressed by the directory containing it. For example, <code>http://www.hsnl.cse.nsysu.edu.tw/wklai/</code> directs to the same page as above.</p><h4 id="http-client-and-server" tabindex="-1">HTTP client and server <a class="header-anchor" href="#http-client-and-server" aria-hidden="true">#</a></h4><p><strong>Client</strong></p><p>HTTP clients typically are browsers that request, receive, and display Web object (rendering HTML DOM). When you enter an URL on a browser</p><ol><li>It tries to make a connection with the host (referring to the host name above).</li><li>When a connection is established, it makes a HTTP request (typically GET) to get the file (referring to the path name above).</li><li>If it is an HTML file, then the browser render out the HTML DOM (as everything you&#39;ve on this webpage)</li></ol><p>We can also <strong>not</strong> use a browser to request a webpage. Try this</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> -n </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET /wklai/index.html HTTP/1.0\\r\\n\\r\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> nc www.hsnl.cse.nsysu.edu.tw 80 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> less</span></span>
<span class="line"></span></code></pre></div><p>However, no one help us render the HTML file, so we&#39;ll see raw HTML texts. The command above makes a connection with Lai&#39;s website using <code>nc</code>, then send a request to get the object.</p><p><strong>Server</strong></p><p>Web server host Web objects which typically are</p><ol><li>HTML files</li><li>CSS style sheets</li><li>JavaScript (This can generate an entire web application nowadays. Vue.js, React)</li><li>PHP files (server-side render)</li><li>Multimedia</li></ol><p>A server need to handle concurrency since it should serve multiple clients concurrently. Three software are mainly used in the Web servers.</p><ol><li>Nginx</li><li>Apache</li><li>Microsoft IIS</li></ol><p>These software aim to deal with large amount of connections, memory usage reduction, speed and so on. Another important job for them is serving as <strong>reverse proxies</strong>, which basically provide a single server entry for the clients but distribute different jobs to servers/computer inside the company networks hidden from the clients.</p><p><strong>An application server</strong> is also frequently used in the modern websites. It can be written in</p><ol><li>PHP/Laravel</li><li>Java/Spring</li><li>Node.js/Express</li><li>Python/Django</li></ol><p>This kind of servers provide business logics, Database interactions, UI independent tasks for the dynamic web contents. For example, a forum website hosts lots of issues from the users. These issues are presented in the same UI structure but the contents are different. Therefore, a HTML template can be used across the forum and an application server is responsible for providing the content <strong>dynamically</strong>.</p><p>The application servers can also handle concurrency but the <strong>Web server</strong> typically has done it by properly distributing the requests to them.</p><h3 id="non-persistent-and-persistent-connections" tabindex="-1">Non-Persistent and Persistent Connections <a class="header-anchor" href="#non-persistent-and-persistent-connections" aria-hidden="true">#</a></h3><p>HTTP is said to be a <strong>stateless protocol</strong>, by which it doesn&#39;t memorize anything happened in the past. If you&#39;ve logged in on a website, closed it, and reopen it, you may find you still logged in. That&#39;s the Web server caching/maintaining the state of your activities, but has nothing to do with the HTTP.</p><p>Since the HTTP is stateless, it cannot recover the data if it&#39;s lost or arrives out-of-order during transmission. Consequently, it uses TCP (not UDP) as its underlying protocol to handle the recovery for it. HTTP also rely on the TCP connection, on which it can be classified into two types, non-persistent connections and persistent connections.</p><h4 id="http-with-non-persistent-connections" tabindex="-1">HTTP with non-persistent connections <a class="header-anchor" href="#http-with-non-persistent-connections" aria-hidden="true">#</a></h4><p>In non-persistent connection, each request/response pair is sent over a <strong>separate</strong> TCP connection. That&#39;s to said, after the client received the requested objects, the connection is terminated.</p><p>When we enter the URL <code>http://www.hsnl.cse.nsysu.edu.tw/wklai/index.html</code> into the browser, here is what happens:</p><ol><li>The HTTP client initiates a TCP connection to the server <code>http://www.hsnl.cse.nsysu.edu.tw/wklai/index.html</code> on port number 80 (default port for HTTP).</li><li>The client sends an HTTP request message <code>GET /wklai/index.html</code> to the server.</li><li>The server retrieves the requested object from its storage, encapsulates the object in an HTTP response message.</li><li>The server tells TCP to close the connection. (But TCP doesn&#39;t actually terminate the connection until it knows that the client has received the response message intact.)</li><li>The client receives the response message (guaranteed by TCP), extracts the HTML file and finds references to the other objects.</li><li>The first four steps are then repeated for each of the images, CSS style sheets, etc. referenced in the HTML file.</li><li>Finally ,the browser renders out the HTML DOM then apply the CSS style sheet.</li></ol><p>In the steps described above, we intentionally vague about how the client obtains the images and style sheets from separated connections.</p><p>Let&#39;s estimate the amount of time it need to request an HTML file and its assets. We defined <strong>round-trip time (RTT)</strong> as the time it takes for a small packet to travel form client to server and then back to the client. The RTT includes processing, queuing, transmission and propagation delay discussed in <a href="./chapter-1.html#types-of-delay">chapter 1</a>. Since TCP enforces <a href="/course-notes/courses/cse491-network-application-programming/chapter-2.html#connection-management">Three-way handshaking</a>, it requires <strong>2 RTT</strong> for a client to get the HTML file (3 transmission for connection, 1 for data transmission) for non-persistent connection <em>(the request message is included in the third transmission in 3-way handshaking)</em>. And <strong>2 RTT</strong> for every other objects following due to the separate connections.</p><h4 id="http-with-persistent-connections" tabindex="-1">HTTP with persistent connections <a class="header-anchor" href="#http-with-persistent-connections" aria-hidden="true">#</a></h4><p>To overcome the waste of time on the connection establishment. HTTP 1.1 presents the persistent connections. In which the server leaves the TCP connection open after sending a response. Subsequent requests and responses between the same client and server can be sent over the same connection. In particular, an entire Web page (in the example above, the base HTML file and the assets) can be sent over a single persistent TCP connection. Only the first request to the object takes <strong>2 RTT</strong> to establish connection and transmit data, rest of the requests take <strong>1 RTT</strong> with the persistent connection.</p><p><img src="`+T+`" alt="figure-2-4"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><h3 id="http-message-format" tabindex="-1">HTTP Message Format <a class="header-anchor" href="#http-message-format" aria-hidden="true">#</a></h3><h4 id="http-request-message" tabindex="-1">HTTP request message <a class="header-anchor" href="#http-request-message" aria-hidden="true">#</a></h4><p>We&#39;ve seen the <code>GET</code> method above, let&#39;s look at a more complete example of an HTTP request message. Run</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">nc -l 1234</span></span>
<span class="line"></span></code></pre></div><p>This start a server on your computer listening on port 1234. Then go to your browser and enter the URL <code>localhost:1234</code> to make an HTTP request. On your terminal, you should see the server received the request.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line highlighted"><span style="color:#A6ACCD;">GET / HTTP/1.1</span></span>
<span class="line"><span style="color:#A6ACCD;">Host: localhost:1234</span></span>
<span class="line"><span style="color:#A6ACCD;">Upgrade-Insecure-Requests: 1</span></span>
<span class="line"><span style="color:#A6ACCD;">Accept: text/html,application/xhtml+xml,application/xml</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">q=0.9,</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">/</span><span style="color:#89DDFF;">*;</span><span style="color:#A6ACCD;">q=0.8</span></span>
<span class="line"><span style="color:#A6ACCD;">User-Agent: Mozilla/5.0 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Macintosh</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> Intel Mac OS X 10_15_7</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> AppleWebKit/605.1.15 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">KHTML, like Gecko</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> Version/14.1 Safari/605.1.15</span></span>
<span class="line"><span style="color:#A6ACCD;">Accept-Language: en-us</span></span>
<span class="line"><span style="color:#A6ACCD;">Accept-Encoding: gzip, deflate</span></span>
<span class="line"><span style="color:#A6ACCD;">Connection: keep-alive</span></span>
<span class="line"></span></code></pre></div><p>The first line of an HTTP request message is called the <strong>request line</strong>; the subsequent lines are called the <strong>header lines</strong></p><p>The <strong>request line</strong> have three fields:</p><ol><li>The method field - <code>GET</code>, <code>POST</code>, <code>HEAD</code>, <code>PUT</code>, <code>DELETE</code></li><li>The URL field - requested object</li><li>The HTTP version field - <code>HTTP/1.0</code>, <code>HTTP/1.1</code></li></ol><p>For the <strong>header lines</strong></p><ol><li><code>Host:</code><ul><li>specifying the host on which the object resides. You might think that this is unnecessary, as there is already a TCP connection to the host. But, the information is required by Web proxy caches as we&#39;ll see later.</li></ul></li><li><code>User-agent:</code><ul><li>specifying the browser sending request, it is useful because the server can send different versions of the same object depending on the user-agent.</li></ul></li><li><code>Accept-language:</code><ul><li>This is how HTTP deliver the default version of language based on your language settings.</li></ul></li><li><code>Connection:</code><ul><li><code>close</code> tells the server that it doesn&#39;t want to bother with persistent connections; it wants the server to close the connection after sending the requested object.</li><li><code>keep-alive</code> tells the server that it wants a persistent connections</li></ul></li></ol><p><img src="`+d+`" alt="figure-2-5"><strong>General format of an HTTP request message</strong></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><p><code>GET</code> <strong>method</strong></p><ul><li>Used by the browser to request objects</li><li>The entity body is empty</li><li>Can embed the inputted data in the URL when submitting forms <ul><li>For example, <code>www.somesite.com/animalsearch?monkeys&amp;bananas</code> submits the form with two inputs.</li></ul></li></ul><p><code>POST</code> <strong>method</strong></p><ul><li>Used when the user fills out a form <ul><li>For example, when a user provides search words to a search engine.</li></ul></li><li>The entity body contains the user inputs</li></ul><p><code>HEAD</code> <strong>method</strong></p><ul><li>Used by developer for debugging</li><li>Just like <code>GET</code> but server responds with an HTTP message without the requested object</li></ul><p><code>PUT</code> <strong>method</strong></p><ul><li>Used by the application that need to upload objects to Web servers.</li></ul><p><code>DELETE</code> <strong>method</strong></p><ul><li>Allowing a user or an application to delete an object on a Web server</li></ul><h4 id="http-response-message" tabindex="-1">HTTP response message <a class="header-anchor" href="#http-response-message" aria-hidden="true">#</a></h4><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> -n </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET /wklai/index.html HTTP/1.0\\r\\n\\r\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> nc www.hsnl.cse.nsysu.edu.tw 80 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> less</span></span>
<span class="line"></span></code></pre></div><p>Look at the first few lines</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">HTTP/1.1 200 OK</span></span>
<span class="line"><span style="color:#A6ACCD;">Date: Sat, 01 May 2021 03:09:59 GMT</span></span>
<span class="line"><span style="color:#A6ACCD;">Server: Apache/2.2.23 (Unix)</span></span>
<span class="line"><span style="color:#A6ACCD;">Last-Modified: Tue, 26 Jan 2021 12:30:52 GMT</span></span>
<span class="line"><span style="color:#A6ACCD;">ETag: &quot;4a00cd-d7ba-5b9ccd33cd700&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">Accept-Ranges: bytes</span></span>
<span class="line"><span style="color:#A6ACCD;">Content-Length: 55226</span></span>
<span class="line"><span style="color:#A6ACCD;">Vary: Accept-Encoding</span></span>
<span class="line"><span style="color:#A6ACCD;">Connection: close</span></span>
<span class="line"><span style="color:#A6ACCD;">Content-Type: text/html</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">(data data data data data ...)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Let\u2019s take a careful look at this response message. It has three sections:</p><ol><li>An initial <strong>status line</strong></li><li>Nine <strong>header lines</strong></li><li>The <strong>entity body</strong></li></ol><p>The entity body is the meat of the message\u2014it contains the requested object itself (represented by data data data data data ...).</p><p><img src="`+Q+'" alt="figure-2-6"><strong>General format of an HTTP response message</strong></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><p><strong>Status line</strong></p><p>Some common status codes and associated phrases include:</p><ul><li>200 OK <ul><li>Request succeeded and the information is returned in the response.</li></ul></li><li>301 Moved Permanently <ul><li>Requested object has been permanently moved; the new URL is specified in Location header of the response message. The client software will automatically retrieve the new URL.</li></ul></li><li>400 Bad Request <ul><li>This is a generic error code indicating that the request could not be understood by the server.</li></ul></li><li>404 Not Found <ul><li>The requested document does not exist on this server.</li></ul></li><li>505 HTTP Version Not Supported <ul><li>The requested HTTP protocol version is not supported by the server.</li></ul></li></ul><p><strong>Header lines</strong></p><ul><li><code>Date:</code><ul><li>the time and date when the HTTP response was created, i.e., the time when the server retrieved the object from the file system.</li></ul></li><li><code>Server:</code><ul><li>Analogous to the <strong>User-agent</strong> in the request message header.</li></ul></li><li><code>Last-Modified:</code><ul><li>the time ad date when the object was created or last modified. It&#39;s critical for object caching as we&#39;ll see in the <strong>proxy server</strong> later</li></ul></li><li><code>Content-Type:</code><ul><li>The object type is officially indicated by the Content-Type instead of the file extension.</li></ul></li></ul><h3 id="user-server-interaction-cookies" tabindex="-1">User-Server Interaction: Cookies <a class="header-anchor" href="#user-server-interaction-cookies" aria-hidden="true">#</a></h3><p>We&#39;ve said that HTTP is stateless, but sometimes, we want to identify users on a website. The server wishes to restrict user access or serve content as a function of the user identity. For these purposes, HTTP uses <strong>cookies</strong>. We use a example of visiting <code>www.amazon.com</code> to show how cookies work.</p><p>When Susan use a browser to visit Amazon&#39;s website for the firs time</p><ol><li>When the request comes into the Amazon Web server, the server creates a unique identification number and creates an entry in its <strong>back-end database</strong> that is indexed by the identification number.</li><li>The Amazon Web server then responds to Susan\u2019s browser, including in the HTTP response a <code>Set-cookie:</code> header, which contains the identification number. <ul><li>For example, the header line might be <code>Set-cookie: 1678</code>.</li></ul></li><li>When Susan\u2019s browser receives the HTTP response message, it sees the <code>Set-cookie:</code> header. The browser then appends a line to the special cookie file that it manages. <ul><li>Even if there is already cookie for another host, say <code>www.ebay.com</code>, they don&#39;t interfere with each other</li></ul></li><li>As Susan continues to browse the Amazon site, each time she requests a Web page, her browser consults her cookie file, extracts her identification number for this site, and puts a cookie header line that includes the identification number in the HTTP request.</li></ol><p><img src="'+h+'" alt="figure-2-7"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><p>In this manner, the Amazon server can track Susan&#39;s activities at the Amazon site, remember what&#39;s left in the shopping cart last time. It can also remember the Susan&#39;s name, credit card number, etc. if she&#39;s made some purchase, and next time, she doesn&#39;t need to enter those information again.</p><h3 id="web-caching" tabindex="-1">Web Caching <a class="header-anchor" href="#web-caching" aria-hidden="true">#</a></h3><p>A Web cache, also called a <strong>proxy server</strong>, is a network entity that satisfies HTTP requests on the behalf of an origin Web server, i.e., a mock server. The Web cache has its own disk storage and keeps copies of recently requested objects in this storage. If a browser is configured to use a proxy server, when sending requests</p><ol><li>The browser establishes a TCP connection to the Web cache and sends an HTTP request for the object to the Web cache.</li><li>The Web cache checks to see if it has a copy of the object stored locally. If it does, the Web cache returns the object within an HTTP response message to the client browser.</li><li>If the Web cache does not have the object, the Web cache opens a TCP connection to the origin server,then sends an HTTP request for the object into the cache-to-server TCP connection. After receiving this request, the origin server sends the object within an HTTP response to the Web cache. <ul><li>If it have the object, the Web cache perform a <a href="#the-conditional-get">conditional <code>GET</code></a> and response to the browser if the object it has is up to date.</li></ul></li><li>When the Web cache receives the object, it stores a copy in its local storage and sends a copy, within an HTTP response message, to the client browser (over the connection between the client browser and the Web cache).</li></ol><p><img src="'+c+'" alt="figure-2-8"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><h4 id="advantage" tabindex="-1">Advantage <a class="header-anchor" href="#advantage" aria-hidden="true">#</a></h4><ol><li>The transmission rate doesn&#39;t have to be limited by the bottleneck on the link toward the public Internet</li><li>Reduce the congestion in the Public Internet</li></ol><p><img src="'+p+`" alt="figure-2-9"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><p>However, if the object wasn&#39;t cached in the proxy server, the time it takes to receive the requested data would be even longer than directly requesting to the origin server. Consequently, the use of proxy server increase the overall transmission rate but producing high <strong>variance</strong>.</p><table><thead><tr><th></th><th>Cached</th><th>Non-cached</th></tr></thead><tbody><tr><td>Speed</td><td>Fast</td><td>Slow</td></tr><tr><td>Variance</td><td>High</td><td>Low</td></tr></tbody></table><h4 id="the-conditional-get" tabindex="-1">The conditional <code>GET</code> <a class="header-anchor" href="#the-conditional-get" aria-hidden="true">#</a></h4><p>Remember we&#39;ve said the <code>Last-Modified:</code> header is important to the proxy server. The conditional <code>GET</code> sent by the proxy server guarantees it always responses with the up-to-date objects. When the proxy server received a request, it forward the request with <code>If-modified-since:</code> header added. For example</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">GET /fruit/kiwi.gif HTTP/1.1</span></span>
<span class="line"><span style="color:#A6ACCD;">Host: www.exotiquecuisine.com</span></span>
<span class="line"><span style="color:#A6ACCD;">If-modified-since: Wed, 9 Sep 2015 09:23:24</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>The value of the <code>If-modified-since:</code> header line is exactly equal to the value of the <code>Last-Modified:</code> header line of the request to get the cached object in the past.</p><p>This conditional <code>GET</code> is telling the server to send the object only if the object has been modified since the specified date. Suppose the object has not been modified since 9 Sep 2015 09:23:24. Then the Web server sends a response message to the proxy server</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">HTTP/1.1 304 Not Modified</span></span>
<span class="line"><span style="color:#A6ACCD;">Date: Sat, 10 Oct 2015 15:39:29</span></span>
<span class="line"><span style="color:#A6ACCD;">Server: Apache/1.3.0 (Unix)\xA0</span></span>
<span class="line"><span style="color:#A6ACCD;">(empty entity body)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ul><li>If the resource has not changed, the server sends back a <code>304 Not Modified response</code>. This makes the cache fresh again, and the client uses the cached resource. Although there is a response/request round-trip that consumes some resources, this is more efficient than to transmit the whole resource over the wire again.</li><li>If the resource has changed, the server just sends back a <code>200 OK response</code>, with the new version of the resource, like if the request wasn&#39;t conditional and the client uses this new resource (and caches it).</li></ul><p>See more details on <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Conditional_requests" target="_blank" rel="noreferrer">MDN</a></p><h2 id="electronic-mail-in-the-internet" tabindex="-1">Electronic Mail in the Internet <a class="header-anchor" href="#electronic-mail-in-the-internet" aria-hidden="true">#</a></h2><h3 id="smtp" tabindex="-1">SMTP <a class="header-anchor" href="#smtp" aria-hidden="true">#</a></h3><p>SMTP is an ancient protocol, it restricts the body (not just the headers) of all mail messages to simple <strong>7-bit ASCII</strong>. The basic operation of SMTP is presented as following</p><ol><li>Alice invokes her user agent for e-mail, provides Bob\u2019s e-mail address, composes a message, and instructs the user agent to send the message.</li><li>Alice\u2019s user agent sends the message to her mail server, where it is placed in a <strong>message queue</strong>.</li><li>The client side of SMTP, running on Alice\u2019s mail server, sees the message in the message queue. It opens a TCP connection to an SMTP server, running on Bob\u2019s mail server.</li><li>After some initial SMTP handshaking, the SMTP client sends Alice\u2019s message into the TCP connection.</li><li>At Bob\u2019s mail server, the server side of SMTP receives the message. Bob\u2019s mail server then places the message in Bob\u2019s mailbox.</li><li>Bob invokes his user agent to read the message at his convenience.</li></ol><p><img src="`+m+`" alt="figure-2-10"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><div class="tip custom-block"><p class="custom-block-title">Direct Connection</p><p>It is important to observe that SMTP does not normally use intermediate mail servers for sending mail. Even if Bob\u2019s mail server is down, the message remains in Alice\u2019s mail server and waits for a new attempt. The message does not get placed in some intermediate mail server.</p></div><h4 id="run-your-own-mail-server" tabindex="-1">Run your own mail server <a class="header-anchor" href="#run-your-own-mail-server" aria-hidden="true">#</a></h4><p>The marked lines are entered by ourselves, while the other lines are generated by the remote server.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line highlighted"><span style="color:#A6ACCD;">% nc student.nsysu.edu.tw 25</span></span>
<span class="line"><span style="color:#A6ACCD;">220 stu02.nsysu.edu.tw ESMTP Postfix</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">HELO NotAHost</span></span>
<span class="line"><span style="color:#A6ACCD;">250 stu02.nsysu.edu.tw</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">MAIL FROM: </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">nobody@blah.blahblah</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">250 2.1.0 Ok</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">RCPT TO: </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">b073040018@student.nsysu.edu.tw</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">250 2.1.5 Ok</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">DATA</span></span>
<span class="line"><span style="color:#A6ACCD;">354 End data with </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">CR&gt;&lt;LF</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">.</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">CR&gt;&lt;LF</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">Who I am</span><span style="color:#89DDFF;">?</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">Do I exist</span><span style="color:#89DDFF;">?</span></span>
<span class="line highlighted"><span style="color:#82AAFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">250 2.0.0 Ok: queued as 1935812156C</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">QUIT</span></span>
<span class="line"><span style="color:#A6ACCD;">221 2.0.0 Bye</span></span>
<span class="line"></span></code></pre></div><ul><li><code>HELO hostname</code><ul><li>Say hello to the receiving server, i.e., make a TCP connection. Note that the hostname represent the sending host and it need not be registered in the DNS, it can be anything.</li></ul></li><li><code>MAIL FROM: &lt;address&gt;</code><ul><li>Sender&#39;s address, anything follows the <a href="https://en.wikipedia.org/wiki/Email_address" target="_blank" rel="noreferrer">email address format</a>. The domain need not be the same as the hostname in <code>HELO</code>.</li></ul></li><li><code>RCPT TO: &lt;address&gt;</code><ul><li>A registered email address in the receiving mail server (<code>student.nsysu.edu.tw</code> here).</li></ul></li><li><code>DATA</code><ul><li>The contents of the email. Terminated by <code>&lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</code></li></ul></li><li><code>QUIT</code><ul><li>Close the TCP connection.</li></ul></li></ul><p><strong>Received email</strong></p><p><img src="`+g+`" alt="mail"></p><div class="danger custom-block"><p class="custom-block-title">Anyone Can Use Your Email Address</p><p>Since the sender&#39;s address can be any valid email address, it is possible that someone who has your email address fakes your identity and sends emails from your address to an SMTP server.</p></div><h3 id="comparison-with-http" tabindex="-1">Comparison with HTTP <a class="header-anchor" href="#comparison-with-http" aria-hidden="true">#</a></h3><table><thead><tr><th>HTTP</th><th>SMTP</th></tr></thead><tbody><tr><td>Non-persistent or persistent</td><td>Persistent</td></tr><tr><td>A pull protocol where the receiver initiates the TCP connection</td><td>A push protocol where the sender initiates the TCP connection</td></tr><tr><td>No restriction</td><td>7-bit ASCII encoding</td></tr><tr><td>Treat multimedia (binaries) as objects and encapsulate them in the HTTP message</td><td>Encode multimedia (binaries) into ASCII</td></tr></tbody></table><h3 id="mail-access-protocols" tabindex="-1">Mail Access Protocols <a class="header-anchor" href="#mail-access-protocols" aria-hidden="true">#</a></h3><p>The final missing piece to the puzzle, <strong>user agents</strong>! How can we retrieve the emails from the mail server? There are currently a number of popular mail access protocols</p><ol><li>Post Office Protocol Version 3 (POP3)</li><li>Internet Mail Access Protocol (IMAP)</li><li>HTTP</li></ol><h4 id="pop3" tabindex="-1">POP3 <a class="header-anchor" href="#pop3" aria-hidden="true">#</a></h4><p>POP3 is an extremely simple mail access protocol. Because it&#39;s so simple, its functionality is rather limited. POP3 begins when the user agent (the client) opens a TCP connection to the mail server (the server) on port <strong>110</strong>. With the TCP connection established, POP3 progresses through three phases:</p><ol><li>Authorization <ul><li>Enter the username and the password</li></ul></li><li>Transaction <ul><li><code>list</code>, <code>retr</code>, and <code>dele</code></li><li>Server response <code>+OK</code> if the command is valid, otherwise <code>-ERR</code></li></ul></li><li>Update <ul><li>Occur after the <code>quit</code> command, ending the POP3 session and deletes the messages that were marked for deletion by the <code>dele</code> command.</li></ul></li></ol><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line highlighted"><span style="color:#A6ACCD;">% nc student.nsysu.edu.tw 110</span></span>
<span class="line"><span style="color:#A6ACCD;">+OK POP3 ready</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">user b073040018</span></span>
<span class="line"><span style="color:#A6ACCD;">+OK</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">pass </span><span style="color:#89DDFF;">****</span></span>
<span class="line"><span style="color:#A6ACCD;">+OK server ready</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">list</span></span>
<span class="line"><span style="color:#A6ACCD;">+OK 2 messages</span></span>
<span class="line"><span style="color:#A6ACCD;">1 534</span></span>
<span class="line"><span style="color:#A6ACCD;">2 560</span></span>
<span class="line"><span style="color:#82AAFF;">.</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">retr 1</span></span>
<span class="line"><span style="color:#A6ACCD;">+OK message follows</span></span>
<span class="line"><span style="color:#A6ACCD;">Return-Path: </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">nobody@blah.blahblah</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">Received: from stu02.nsysu.edu.tw </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LHLO stu02.nsysu.edu.tw</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">10.10.20.85</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> by</span></span>
<span class="line"><span style="color:#A6ACCD;"> stu05.nsysu.edu.tw with LMTP</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> Sat, 1 May 2021 18:12:04 +0800 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">CST</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">Received: from NotAHost </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">220-142-21-58.dynamic-ip.hinet.net </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">220.142.21.58</span><span style="color:#89DDFF;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">	by stu02.nsysu.edu.tw </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Postfix</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> with SMTP id 1935812156C</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">b073040018@student.nsysu.edu.tw</span><span style="color:#89DDFF;">&gt;;</span><span style="color:#A6ACCD;"> Sat,  1 May 2021 18:11:32 +0800 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">CST</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">Message-Id: </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">20210501101146.1935812156C@stu02.nsysu.edu.tw</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">Date: Sat,  1 May 2021 18:11:32 +0800 </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">CST</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">From: nobody@blah.blahblah</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Who I am</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#A6ACCD;">Do I exist</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#82AAFF;">.</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">quit</span></span>
<span class="line"><span style="color:#A6ACCD;">+OK stu05.nsysu.edu.tw Zimbra POP3 server closing connection</span></span>
<span class="line"></span></code></pre></div><h4 id="imap" tabindex="-1">IMAP <a class="header-anchor" href="#imap" aria-hidden="true">#</a></h4><p>An IMAP server will associate each message with a folder; when a message first arrives at the server, it is associated with the recipient\u2019s INBOX folder. The recipient can then move the message into a new, user-created folder, read the message, delete the message, and so on. IMAP also provides commands that allow users to search remote folders for messages matching specific criteria.</p><p>Another important feature of IMAP is that it has commands that permit a user agent to obtain components of messages. For example, a user agent can obtain just the message header of a message or just one part of a multipart MIME message. This feature is useful when there is a low-bandwidth connection or a long message that might contain, for example, an audio or video clip.</p><h4 id="web-based-e-mail" tabindex="-1">Web-based e-mail <a class="header-anchor" href="#web-based-e-mail" aria-hidden="true">#</a></h4><p>More and more users today are sending and accessing their e-mail through their Web browsers. Hotmail introduced Web-based access in the mid 1990s. Now Web-based e-mail is also provided by Google, Yahoo!, as well as just about every major university and corporation. With this service, the user agent is an ordinary Web browser, and the user communicates with its remote mailbox via HTTP. When a recipient, such as Bob, wants to access a message in his mailbox, the e-mail message is sent from Bob\u2019s mail server to Bob\u2019s browser using the HTTP protocol rather than the POP3 or IMAP protocol.</p><h2 id="dns\u2013the-internet-s-directory-service" tabindex="-1">DNS\u2013The Internet&#39;s Directory Service <a class="header-anchor" href="#dns\u2013the-internet-s-directory-service" aria-hidden="true">#</a></h2><h3 id="services-provided-by-dns" tabindex="-1">Services Provided by DNS <a class="header-anchor" href="#services-provided-by-dns" aria-hidden="true">#</a></h3><p>We have just seen that there are two ways to identify a host\u2014by a hostname and by an IP address. The Internet&#39;s <strong>domain name system (DNS)</strong> is a directory service that translates hostnames to IP addresses. The DNS protocol runs over UDP and uses <strong>port 53</strong>. DNS provides a few other important services in addition to translating hostnames to IP addresses:</p><ul><li>Host aliasing <ul><li>A host with complicated host name can have one or more alias names. The complicated one is usually a <strong>canonical hostname</strong>. The other names are aliases and they tend to be more mnemonic for people to memorize them.</li></ul></li><li>Mail server aliasing <ul><li>Same as above, take our school for example, the canonical name for the student mail server is <code>stu02.nsysu.edu.tw</code> and the alias name is <code>student.nsysu.edu.tw</code></li></ul></li><li>Load distribution <ul><li>Busy sites are typically replicated over multiple servers, with each server running on a different end system and each having a different IP address. A set of IP addresses is thus associated with one canonical hostname. The DNS database contains this set of IP addresses. It tries to give the client one of these IP address evenly in order to distribute the loading on each server.</li></ul></li></ul><h3 id="overview-of-how-dns-works" tabindex="-1">Overview of How DNS Works <a class="header-anchor" href="#overview-of-how-dns-works" aria-hidden="true">#</a></h3><p>A simple design for DNS would have one DNS server that contains all the mappings. In this centralized design, clients simply direct all queries to the single DNS server, and the DNS server responds directly to the querying clients. Despite of the simplicity, the problems with a centralized design include</p><ul><li>A single point of failure <ul><li>If the DNS server crashes, so does the entire Internet!</li></ul></li><li>Traffic volume <ul><li>A single DNS server would have heavy loadings</li></ul></li><li>Distant centralized database <ul><li>A single DNS server cannot be close to all the querying clients</li></ul></li><li>Maintenance <ul><li>It have to be updated frequently to account for every new host</li></ul></li></ul><h4 id="a-distributed-hierarchical-database" tabindex="-1">A distributed, hierarchical database <a class="header-anchor" href="#a-distributed-hierarchical-database" aria-hidden="true">#</a></h4><p><img src="`+u+'" alt="figure-2-11"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><ul><li>Root DNS servers <ul><li>There are over 400 root name servers scattered all over the world.</li><li>Root name servers provide the IP addresses of the TLD servers.</li></ul></li><li>Top-level domain (TLD) servers <ul><li>For the top-level domains such as com, org, net, edu, and gov</li><li>For the country top-level domain such as uk, fr, ca, jp, and tw</li><li>TLD servers provide the IP addresses for authoritative DNS servers.</li></ul></li><li>Authoritative DNS servers <ul><li>Every organization with publicly accessible hosts on the Internet must provide publicly accessible DNS records that map the names of those hosts to IP addresses. An organization\u2019s authoritative DNS server houses these DNS records. An organization can implement its own authoritative DNS server to hold these records</li><li>Most universities and large companies implement and maintain their own primary and secondary (backup) authoritative DNS server.</li><li>Take our school for example, <code>dns.nsysu.edu.tw</code> a.k.a <code>140.117.11.1</code> is an authoritative DNS server</li><li><code>dns2.nsysu.edu.tw</code> a.k.a <code>140.117.11.11</code> is a backup authoritative DNS server</li></ul></li></ul><p><strong>Example</strong></p><p>Suppose a host on <code>cse.nyu.edu</code> wants the IP address for <code>gaia.cs.umass.edu</code>. The local DNS server and the authoritative DNS server for them are <code>dns.nyu.edu.</code> and <code>dns.umass.edu</code> respectively.</p><ol><li>The host send a DNS query messages to its local DNS server, <code>dns.nyu.edu</code>.</li><li>The local DNS server forwards the query message to a root DNS server.</li><li>The root DNS server takes note of the <code>edu</code> suffix and returns a list of IP addresses for TLD servers responsible for <code>edu</code>.</li><li>The local DNS server then resends the query message to on of these TLD servers.</li><li>The TLD server takes note of the <code>umass.edu</code> suffix and responds with the IP address of the authoritative DNS server for the University of Massachusetts, <code>dns.unass.edu</code>.</li><li>Finally, the local DNS server resends the query message directly to <code>dns.umass.edu</code></li><li>The authoritative server responds with the IP address of <code>gaia.cs.umass.edu</code>.</li><li>The local DNS server then gives the IP address back to the host.</li></ol><p>The left hand side of the figure illustrate the procedures above. However, a fully recursive approach, as the rhs of the figure shows, also works. In practice, the queries typically follow the pattern in the lhs: The query from the requesting host to the local DNS server is recursive, and the remaining queries are iterative.</p><p><img src="'+f+`" alt="figure-2-12"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><p>Note that in this example, in order to obtain the mapping for one hostname, eight DNS messages were sent: four query messages and four reply messages! We\u2019ll soon see how DNS caching reduces this query traffic.</p><h4 id="dns-caching" tabindex="-1">DNS caching <a class="header-anchor" href="#dns-caching" aria-hidden="true">#</a></h4><p>The idea behind DNS caching is very simple. In a query chain, when a DNS server receives a DNS reply (containing, for example, a mapping from a hostname to an IP address), it can cache the mapping in its local memory. In the example above, the local DNS server <code>dns.nyu.edu</code> has acquired the IP addresses for</p><ol><li>The TLD servers</li><li>The authoritative DNS server for UMass</li><li><code>gaia.cs.umass.edu</code></li></ol><p>Another host in NYU can thus use the cache in the local DNS server to directly get the IP address for <code>gai.cs.umass</code> or the TLD servers. In fact, because of caching, root servers are bypassed for all but a very small fraction of DNS queries.</p><h3 id="dns-records-and-messages" tabindex="-1">DNS Records and Messages <a class="header-anchor" href="#dns-records-and-messages" aria-hidden="true">#</a></h3><p>The DNS servers that together implement the DNS distributed database store <strong>resource records (RRs)</strong>, including RRs that provide hostname-to-IP address mappings. A RR is a four-tuple taht contains the following fields</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">(Name, Value, Type, TTL)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><code>TTL</code> is the time to live of the resource record; it determines when a resource should be removed from a <strong>cache</strong>. In the example records given below, we ignore the <code>TTL</code> field.</p><ul><li><code>Type=A</code><ul><li>Address</li><li>The <code>Name</code> is a hostname</li><li>The <code>Value</code> is the IP address for the hostname</li><li>For example, <code>(www.nsysu.edu.tw, 140.117.13.241, A)</code></li></ul></li><li><code>Type=NS</code><ul><li>Name server</li><li>The <code>Name</code> is a domain</li><li>The <code>Value</code> is the hostname of an authoritative DNS server that knows how to obtain the IP addresses for hosts in the domain</li><li>For example, <code>(nsysu.edu.tw, dns.nsysu.edu.tw, NS)</code></li></ul></li><li><code>Type=CNAME</code><ul><li>Canonical name</li><li>The <code>Name</code> is an alias hostname</li><li>The <code>Value</code> is a canonical hostname for the alias hostname <code>Name</code></li><li>For example, <code>(www.apple.com, www.apple.com.edgekey.net, CNAME)</code></li></ul></li><li><code>Type=MX</code><ul><li>Mail exchange</li><li>The <code>Name</code> is an alias hostname</li><li>The <code>Value</code> is a canonical hostname for the alias hostname <code>Name</code></li><li>For example, <code>(student.nsysu.edu.tw, spamgw.nsysu.edu.tw, MX)</code></li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">Same Aliased Name for Mail and Web Server</p><p>By using the <code>MX</code> record, a company can have the same aliased name for its mail server and for one of its other servers (such as its Web server).</p><ul><li>To obtain the canonical name for the other server, the DNS client would query for an <code>CNAME</code> record.</li><li>To obtain the canonical name for the mail server, a DNS client would query for an <code>MX</code> record</li></ul></div><ul><li>If a DNS server is authoritative for a particular hostname, then the DNS server will contain a <strong>Type <code>A</code> record</strong> for the hostname. (Even if the DNS server is not authoritative, it may contain a Type A record in its cache.)</li><li>If a server is not authoritative for a hostname, it contains <ul><li>A <strong>Type <code>NS</code> record</strong> for the domain that includes the hostname</li><li>A <strong>Type <code>A</code> record</strong> that provides the IP address of the DNS server in the Value field of the NS record.</li><li>For example a TLD server may contain <ul><li><code>(nsysu.edu.tw, dns.nsysu.edu.tw, NS)</code></li><li><code>(dns.nsysu.edu.tw, 140.117.11.1, A)</code></li></ul></li></ul></li></ul><h4 id="dns-messages" tabindex="-1">DNS messages <a class="header-anchor" href="#dns-messages" aria-hidden="true">#</a></h4><p>There are only two kinds of DNS messages, DNS <strong>query</strong> and <strong>reply</strong> messages. They share the same header as following</p><p><img src="`+w+'" alt="figure-2-13"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><ul><li>Flags <ul><li>A 1-bit query/reply flag <ul><li>Whether the message is a query (0) or a reply (1).</li></ul></li><li>A 1-bit authoritative flag <ul><li>Set in a reply message when a DNS server is an authoritative server for a queried name.</li></ul></li><li>A 1-bit recursion-desired flag</li><li>A 1-bit recursion-available flag</li></ul></li><li>Number of ... <ul><li>The number of occurrences of four types of data sections that follow the header</li></ul></li><li>Questions <ul><li>Information about the query that is being made.</li><li>A name field that contains the name that is being queried</li><li>A type field that indicates the type of question being asked about the name, for example <ul><li>The host address associated with a name (Type <code>A</code>)</li><li>The mail server for a name (Type <code>MX</code>)</li></ul></li></ul></li><li>Answers <ul><li>RRs for the name that was originally queried in a reply from a DNS server.</li><li>A reply can return multiple RRs in the answer, since a hostname can have multiple IP addresses. Recall <a href="#services-provided-by-dns">load distribution</a></li></ul></li><li>Authority <ul><li>RRs of <strong>other</strong> authoritative servers.</li></ul></li><li>Additionally information <ul><li>Other helpful RRs, for example, the answer field in a reply to an <code>MX</code> query contains <ul><li>A resource record providing the canonical hostname of a mail server.</li><li><strong>The additional section</strong> contains a Type <code>A</code> record providing the IP address for the canonical hostname of the mail server</li></ul></li></ul></li></ul><h4 id="inserting-records-into-dns" tabindex="-1">Inserting records into DNS <a class="header-anchor" href="#inserting-records-into-dns" aria-hidden="true">#</a></h4><p>Let&#39;s say, you have a startup named Network Utopia. You would like to build the network infrastructure for your company. How to make others find you by a new domain name?</p><ol><li>Register the name <code>networkutopia.com</code> at <strong>DNS registrar</strong>, e.g., <a href="https://www.networksolutions.com" target="_blank" rel="noreferrer">Network Solutions</a><ul><li>Provide hostnames, IP addresses of authoritative name server (primary and secondary)</li><li>The registrar insert two RRs into <code>.com</code> TLD server <ul><li><code>(networkutopia.com, dns.networkutopia.com, NS)</code></li><li><code>(dns.networkutopia.com, 212.212.212.1, A)</code></li></ul></li></ul></li><li>In your authoritative, insert <ul><li>Type <code>A</code> record for <code>www.networkutopia.com</code> (Web server)</li><li>Type <code>MX</code> record for <code>networkutopia.com</code> (Mail server)</li></ul></li></ol><h4 id="dns-vulnerabilities" tabindex="-1">DNS vulnerabilities <a class="header-anchor" href="#dns-vulnerabilities" aria-hidden="true">#</a></h4><ul><li>DDoS bandwidth-flooding <ul><li>To DNS root servers <ul><li>Happened before on Oct. 21, 2002, where 13 DNS root server were attacked</li><li>DNS root servers are typically protected by packet filers</li><li>Most local DNS servers cache the IP addresses of TLD servers, allowing the query process to bypass the DNS root servers.</li></ul></li><li>To TLD servers <ul><li>Harder to filter DNS queries directed o DNS server</li><li>Not easily bypassed as the root server</li><li>Severity is mitigated by caching in local DNS servers</li></ul></li></ul></li><li>Man-in-the-middle-attack <ul><li>Intercept queries from hosts and returns bogus replies</li><li>Difficult to implement</li></ul></li></ul><h2 id="peer-to-peer-file-distribution" tabindex="-1">Peer-to-Peer File Distribution <a class="header-anchor" href="#peer-to-peer-file-distribution" aria-hidden="true">#</a></h2><h3 id="scalability-of-p2p-architectures" tabindex="-1">Scalability of P2P architectures <a class="header-anchor" href="#scalability-of-p2p-architectures" aria-hidden="true">#</a></h3><p>To compare client-server architectures with peer-to-peer architectures, and illustrate the inherent self-scalability of P2P, we now consider a simple quantitative model for distributing a file to a fixed set of peers for both architecture types.</p>',194),Z=e("thead",null,[e("tr",null,[e("th",null,"Notation"),e("th",null,"Meaning")])],-1),N={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},j={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.355ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.232ex",height:"1.355ex",role:"img",focusable:"false",viewBox:"0 -442 986.6 599.1"},F=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g></g>',1),q=[F],R=e("td",null,"Upload rate of the server's access link",-1),E={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},W={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.357ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.034ex",height:"1.357ex",role:"img",focusable:"false",viewBox:"0 -442 899 599.8"},O=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g>',1),B=[O],G=a("Upload rate of the "),U={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},X={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.781ex",height:"1.52ex",role:"img",focusable:"false",viewBox:"0 -661 345 672"},J=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})])])],-1),z=[J],K=a("th peer's access link"),Y={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},$={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.357ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.916ex",height:"1.927ex",role:"img",focusable:"false",viewBox:"0 -694 847 851.8"},ee=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g>',1),te=[ee],se=a("Download rate of the "),ae={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},oe={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.781ex",height:"1.52ex",role:"img",focusable:"false",viewBox:"0 -661 345 672"},ne=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})])])],-1),ie=[ne],re=a("th peer's access link"),le={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},Te={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.357ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.281ex",height:"1.927ex",role:"img",focusable:"false",viewBox:"0 -694 1892.1 851.8"},de=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g></g>',1),Qe=[de],he=e("td",null,"Download rate of the peer with the lowest download rate",-1),ce={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},pe={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.695ex",height:"1.538ex",role:"img",focusable:"false",viewBox:"0 -680 749 680"},me=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D439",d:"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z",style:{"stroke-width":"3"}})])])],-1),ge=[me],ue=e("td",null,"Size of the file to be distributed (in bits)",-1),fe={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},we={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683"},ye=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1),ve=[ye],be=e("td",null,"Number of peers",-1),_e={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},He={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.357ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.504ex",height:"1.902ex",role:"img",focusable:"false",viewBox:"0 -683 1548.8 840.8"},xe=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g></g></g>',1),De=[xe],ke=e("td",null,"Distribution time for the client-server architecture",-1),Ae={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},Ce={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.65ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.47ex",height:"2.195ex",role:"img",focusable:"false",viewBox:"0 -683 1975.9 970.2"},Le=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(503,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1003,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g></g></g>',1),Se=[Le],Pe=e("td",null,"Distribution time for the peer-to-peer architecture",-1),Me=a("The "),Ie=e("strong",null,"distribution time",-1),Ve=a(" is the time it takes to get a copy of the file to all "),Ze={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},Ne={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683"},je=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1),Fe=[je],qe=a(" peers"),Re=e("p",null,[e("strong",null,"Client-server architectures")],-1),Ee=a("The server must transmit one copy of the file to each of the "),We={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},Oe={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683"},Be=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1),Ge=[Be],Ue=a(" peers. Thus the server must transmit "),Xe={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},Je={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"3.704ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 1637 683"},ze=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g></g></g>',1),Ke=[ze],Ye=a(" bits "),$e={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},e3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.357ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.504ex",height:"1.902ex",role:"img",focusable:"false",viewBox:"0 -683 1548.8 840.8"},t3=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g></g></g>',1),s3=[t3],a3=a(" must be at least "),o3={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},n3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.067ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3123.6 1000"},i3=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1637,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="msub" transform="translate(2137,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g></g>',1),r3=[i3],l3=a("The peer with the lowest download rate cannot obtain all "),T3={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},d3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.695ex",height:"1.538ex",role:"img",focusable:"false",viewBox:"0 -680 749 680"},Q3=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D439",d:"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z",style:{"stroke-width":"3"}})])])],-1),h3=[Q3],c3=a(" bits in less than "),p3={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},m3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.106ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3141.1 1000"},g3=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(749,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="msub" transform="translate(1249,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g></g>',1),u3=[g3],f3=e("li",null,"Putting these two observations together, we obtain",-1),w3={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0"}},y3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.827ex"},xmlns:"http://www.w3.org/2000/svg",width:"25.737ex",height:"6.785ex",role:"img",focusable:"false",viewBox:"0 -1749.5 11375.8 2999"},v3=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(1826.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2882.4,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" style="stroke-width:3;"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)" style="stroke-width:3;"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4910,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M661 -1243L655 -1249H622L604 -1240Q503 -1190 434 -1107T348 -909Q346 -897 346 -499L345 -98L343 -82Q335 3 287 87T157 223Q146 232 145 236Q144 240 144 250Q144 265 145 268T157 278Q242 333 288 417T343 583L345 600L346 1001Q346 1398 348 1410Q379 1622 600 1739L622 1750H655L661 1744V1727V1721Q661 1712 661 1710T657 1705T648 1700T630 1690T602 1668Q589 1659 574 1643T531 1593T484 1508T459 1398Q458 1389 458 1001Q458 614 457 605Q441 435 301 316Q254 277 202 251L250 222Q260 216 301 185Q443 66 457 -104Q458 -113 458 -501Q458 -888 459 -897Q463 -944 478 -988T509 -1060T548 -1114T580 -1149T602 -1167Q620 -1183 634 -1192T653 -1202T659 -1207T661 -1220V-1226V-1243Z" style="stroke-width:3;"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5716,0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(545.2,-686)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g><rect width="1837" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(7793,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(8237.7,0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(791.5,676)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(220,-686)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g><rect width="2092.1" height="60" x="120" y="220"></rect></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10569.8,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7D" d="M144 1727Q144 1743 146 1746T162 1750H167H183L203 1740Q274 1705 325 1658T403 1562T440 1478T456 1410Q458 1398 458 1001Q459 661 459 624T465 558Q470 526 480 496T502 441T529 395T559 356T588 325T615 301T637 284T654 273L660 269V266Q660 263 660 259T661 250V239Q661 236 661 234T660 232T656 229T649 224Q577 179 528 105T465 -57Q460 -86 460 -123T458 -499V-661Q458 -857 457 -893T447 -955Q425 -1048 359 -1120T203 -1239L183 -1249H168Q150 -1249 147 -1246T144 -1226Q144 -1213 145 -1210T153 -1202Q169 -1193 186 -1181T232 -1140T282 -1081T322 -1000T345 -897Q346 -888 346 -501Q346 -113 347 -104Q359 58 503 184Q554 226 603 250Q504 299 430 393T347 605Q346 614 346 1002Q346 1389 345 1398Q338 1493 288 1573T153 1703Q146 1707 145 1710T144 1727Z" style="stroke-width:3;"></path></g></g></g></g>',1),b3=[v3],_3=a("For "),H3={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},x3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683"},D3=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1),k3=[D3],A3=a(" large enough, "),C3={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},L3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.357ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.504ex",height:"1.902ex",role:"img",focusable:"false",viewBox:"0 -683 1548.8 840.8"},S3=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g></g></g>',1),P3=[S3],M3=a(" is given by "),I3={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},V3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.067ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3123.6 1000"},Z3=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1637,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="msub" transform="translate(2137,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g></g>',1),N3=[Z3],j3=a(". This the distribution time increases "),F3=e("strong",null,"linearly",-1),q3=a(" with the number of peers "),R3={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},E3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683"},W3=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1),O3=[W3],B3=e("p",null,[e("strong",null,"Peer-to-peer architectures")],-1),G3=e("p",null,"In a system that not only server but also peers can contribute to the upload capacity",-1),U3=a("To get this file into the community of peers, the server must send the file at least once into its access link. "),X3={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},J3={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.65ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.47ex",height:"2.195ex",role:"img",focusable:"false",viewBox:"0 -683 1975.9 970.2"},z3=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(503,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1003,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g></g></g>',1),K3=[z3],Y3=a(" is at least "),$3={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},e1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.058ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2235.6 1000"},t1=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(749,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="msub" transform="translate(1249,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g></g>',1),s1=[t1],a1=a("The peer with the lowest download rate cannot obtain all "),o1={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},n1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.695ex",height:"1.538ex",role:"img",focusable:"false",viewBox:"0 -680 749 680"},i1=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D439",d:"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z",style:{"stroke-width":"3"}})])])],-1),r1=[i1],l1=a(" bits in less than "),T1={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},d1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.106ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3141.1 1000"},Q1=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(749,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="msub" transform="translate(1249,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g></g>',1),h1=[Q1],c1=a("The total upload capacity of the system "),p1={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},m1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.357ex"},xmlns:"http://www.w3.org/2000/svg",width:"26.118ex",height:"1.676ex",role:"img",focusable:"false",viewBox:"0 -583 11544.2 740.8"},g1=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(361,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(846,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1207,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1736,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(2371,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(3426.8,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(4635.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(5635.9,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(6866.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7866.9,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(9261.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(10261.3,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g></g></g></g>',1),u1=[g1],f1=a(". And the system must deliver "),w1={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},y1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.695ex",height:"1.538ex",role:"img",focusable:"false",viewBox:"0 -680 749 680"},v1=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D439",d:"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z",style:{"stroke-width":"3"}})])])],-1),b1=[v1],_1=a(" bits to each of the "),H1={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},x1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683"},D1=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z",style:{"stroke-width":"3"}})])])],-1),k1=[D1],A1=a(" peers "),C1={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},L1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.65ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.47ex",height:"2.195ex",role:"img",focusable:"false",viewBox:"0 -683 1975.9 970.2"},S1=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(503,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1003,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g></g></g>',1),P1=[S1],M1=a(" is at least "),I1={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},V1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.571ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 4230.3 1000"},Z1=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1637,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="msub" transform="translate(2137,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(361,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(846,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1207,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1736,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z" style="stroke-width:3;"></path></g></g></g></g></g>',1),N1=[Z1],j1=e("li",null,"Putting them together, we get",-1),F1={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0"}},q1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.858ex"},xmlns:"http://www.w3.org/2000/svg",width:"39.816ex",height:"6.816ex",role:"img",focusable:"false",viewBox:"0 -1749.5 17598.5 3012.8"},R1=o('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(503,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1003,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(2253.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3309.5,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" style="stroke-width:3;"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)" style="stroke-width:3;"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5337.1,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M661 -1243L655 -1249H622L604 -1240Q503 -1190 434 -1107T348 -909Q346 -897 346 -499L345 -98L343 -82Q335 3 287 87T157 223Q146 232 145 236Q144 240 144 250Q144 265 145 268T157 278Q242 333 288 417T343 583L345 600L346 1001Q346 1398 348 1410Q379 1622 600 1739L622 1750H655L661 1744V1727V1721Q661 1712 661 1710T657 1705T648 1700T630 1690T602 1668Q589 1659 574 1643T531 1593T484 1508T459 1398Q458 1389 458 1001Q458 614 457 605Q441 435 301 316Q254 277 202 251L250 222Q260 216 301 185Q443 66 457 -104Q458 -113 458 -501Q458 -888 459 -897Q463 -944 478 -988T509 -1060T548 -1114T580 -1149T602 -1167Q620 -1183 634 -1192T653 -1202T659 -1207T661 -1220V-1226V-1243Z" style="stroke-width:3;"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6143.1,0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(338.8,676)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g><rect width="1186.6" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(7569.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(8014.4,0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(791.5,676)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g><rect width="2092.1" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(10346.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10791.1,0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(2182.2,676)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(220,-920)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(1208.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="munderover" transform="translate(2209.1,0)"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1089,477.1) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="msub" transform="translate(4662.4,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g><rect width="5761.3" height="60" x="120" y="220"></rect></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(16792.5,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7D" d="M144 1727Q144 1743 146 1746T162 1750H167H183L203 1740Q274 1705 325 1658T403 1562T440 1478T456 1410Q458 1398 458 1001Q459 661 459 624T465 558Q470 526 480 496T502 441T529 395T559 356T588 325T615 301T637 284T654 273L660 269V266Q660 263 660 259T661 250V239Q661 236 661 234T660 232T656 229T649 224Q577 179 528 105T465 -57Q460 -86 460 -123T458 -499V-661Q458 -857 457 -893T447 -955Q425 -1048 359 -1120T203 -1239L183 -1249H168Q150 -1249 147 -1246T144 -1226Q144 -1213 145 -1210T153 -1202Q169 -1193 186 -1181T232 -1140T282 -1081T322 -1000T345 -897Q346 -888 346 -501Q346 -113 347 -104Q359 58 503 184Q554 226 603 250Q504 299 430 393T347 605Q346 614 346 1002Q346 1389 345 1398Q338 1493 288 1573T153 1703Q146 1707 145 1710T144 1727Z" style="stroke-width:3;"></path></g></g></g></g>',1),E1=[R1],W1=o('<p>Thus, applications with the P2P architecture can be self-scaling. This scalability is a direct consequence of peers being redistributors as well as consumers of bits.</p><p><img src="'+y+'" alt="figure-2-14"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><h3 id="bittorrent" tabindex="-1">BitTorrent <a class="header-anchor" href="#bittorrent" aria-hidden="true">#</a></h3><p>BitTorrent is a popular P2P protocol for file distribution. In BitTorrent lingo, the collection of all peers participating in the distribution of a particular file is called a <strong>torrent</strong>. Peers in a torrent download equal-size chunks of the file from one another, with a typical chunk size of 256 kbytes.</p><p>When a peer first joins a torrent, it has no chunks. Over time it accumulates more and more chunks. While it downloads chunks it also uploads chunks to other peers. Once a peer has acquired the entire file, it may (selfishly, most of us) leave the torrent, or (altruistically) remain in the torrent and continue to upload chunks to other peers. Also, any peer may leave the torrent at any time with only a subset of chunks, and later rejoin the torrent.</p><p><img src="'+v+'" alt="figure-2-15"></p><blockquote><p>Image credit to Computer Networking: A Top-down Approach, 7th Edition</p></blockquote><p>Each torrent has an infrastructure node called a <strong>tracker</strong>. A tracker is essentially a server keeping track of all peers but doesn&#39;t provide the upload capacity of any data chunk. When a peer joins a torrent, it registers itself to the tracker and periodically informs the tracker that it is till in the torrent.</p><p>For example, when a new peer, Alice, joins the torrent</p><ol><li>The tracker randomly select a subset of peers from the set of participating peers. Let&#39;s say, 50 peers in this example.</li><li>Alice attempts to established 50 concurrent TCP connections with these peers (neighboring peers).</li><li>As time evolves, some of these peers may leave and other peers (outside the initial 50) may attempt to establish TCP connections with Alice. So a peer\u2019s neighboring peers will fluctuate over time.</li></ol><p>In BitTorrent, each user has two important decisions to make</p><ol><li>Which chunks should I request first <ul><li>Rarest first</li></ul></li><li>Which of my neighbors should I send chunks to <ul><li>tit-for-tat</li></ul></li></ol><h4 id="rarest-first" tabindex="-1">Rarest first <a class="header-anchor" href="#rarest-first" aria-hidden="true">#</a></h4><p>The idea is to determine, from among the chunks she does not have, the chunks that are the rarest among her neighbors (that is, the chunks that have the fewest repeated copies among her neighbors) and then request those rarest chunks first.</p><p>In this manner, the rarest chunks get more quickly redistributed, aiming to (roughly) <strong>equalize</strong> the numbers of copies of each chunk in the torrent.</p><h4 id="tit-for-tat" tabindex="-1">Tit-for-tat <a class="header-anchor" href="#tit-for-tat" aria-hidden="true">#</a></h4><p>An incentive mechanism <strong>tit-for-tat</strong> is necessary to prevent the majority of the users from being <strong>freeriders</strong>, that is, users who only want to download the files but provides little upload capacity.</p><p>For each of the neighbors, a peer continually measures the rate at which it receives bits and determines the <strong>four peers</strong> that are feeding her bits at the <strong>highest rate</strong>. It then <strong>only</strong> sends chunks to these 4 peers, which are said to be <strong>unchoked</strong> . Every 10 seconds, the peer recalculate the rates and possibly modifies the set of 4 peers.</p><p>However, every 30 seconds, the peer also randomly picks one additional neighbor and sends it chunks. The randomly chosen peer is called <strong>optimistically unchoked</strong> and it has the chance to become one of the <strong>unchoked</strong> peer if it&#39;s rate is high enough.</p><p>Consequently, if the two peers are satisfied with the trading, they will put each other in their top four list and continue trading with each other. It&#39;s somehow similar to <a href="https://www.youtube.com/watch?v=llKW1sGAADE" target="_blank" rel="noreferrer">Homogamy</a> in Sociology. If you don&#39;t offer some chunks, then no one would like to give you either.</p>',21);function O1(B1,G1,U1,X1,J1,z1){return s(),t("div",null,[_,e("p",null,[H,e("mjx-container",x,[(s(),t("svg",D,A))]),C,e("mjx-container",L,[(s(),t("svg",S,M))]),I]),V,e("table",null,[Z,e("tbody",null,[e("tr",null,[e("td",null,[e("mjx-container",N,[(s(),t("svg",j,q))])]),R]),e("tr",null,[e("td",null,[e("mjx-container",E,[(s(),t("svg",W,B))])]),e("td",null,[G,e("mjx-container",U,[(s(),t("svg",X,z))]),K])]),e("tr",null,[e("td",null,[e("mjx-container",Y,[(s(),t("svg",$,te))])]),e("td",null,[se,e("mjx-container",ae,[(s(),t("svg",oe,ie))]),re])]),e("tr",null,[e("td",null,[e("mjx-container",le,[(s(),t("svg",Te,Qe))])]),he]),e("tr",null,[e("td",null,[e("mjx-container",ce,[(s(),t("svg",pe,ge))])]),ue]),e("tr",null,[e("td",null,[e("mjx-container",fe,[(s(),t("svg",we,ve))])]),be]),e("tr",null,[e("td",null,[e("mjx-container",_e,[(s(),t("svg",He,De))])]),ke]),e("tr",null,[e("td",null,[e("mjx-container",Ae,[(s(),t("svg",Ce,Se))])]),Pe])])]),e("p",null,[Me,Ie,Ve,e("mjx-container",Ze,[(s(),t("svg",Ne,Fe))]),qe]),Re,e("ul",null,[e("li",null,[Ee,e("mjx-container",We,[(s(),t("svg",Oe,Ge))]),Ue,e("mjx-container",Xe,[(s(),t("svg",Je,Ke))]),Ye,e("ul",null,[e("li",null,[e("mjx-container",$e,[(s(),t("svg",e3,s3))]),a3,e("mjx-container",o3,[(s(),t("svg",n3,r3))])])])]),e("li",null,[l3,e("mjx-container",T3,[(s(),t("svg",d3,h3))]),c3,e("mjx-container",p3,[(s(),t("svg",m3,u3))])]),f3]),e("mjx-container",w3,[(s(),t("svg",y3,b3))]),e("p",null,[_3,e("mjx-container",H3,[(s(),t("svg",x3,k3))]),A3,e("mjx-container",C3,[(s(),t("svg",L3,P3))]),M3,e("mjx-container",I3,[(s(),t("svg",V3,N3))]),j3,F3,q3,e("mjx-container",R3,[(s(),t("svg",E3,O3))])]),B3,G3,e("ul",null,[e("li",null,[U3,e("ul",null,[e("li",null,[e("mjx-container",X3,[(s(),t("svg",J3,K3))]),Y3,e("mjx-container",$3,[(s(),t("svg",e1,s1))])])])]),e("li",null,[a1,e("mjx-container",o1,[(s(),t("svg",n1,r1))]),l1,e("mjx-container",T1,[(s(),t("svg",d1,h1))])]),e("li",null,[c1,e("mjx-container",p1,[(s(),t("svg",m1,u1))]),f1,e("mjx-container",w1,[(s(),t("svg",y1,b1))]),_1,e("mjx-container",H1,[(s(),t("svg",x1,k1))]),A1,e("ul",null,[e("li",null,[e("mjx-container",C1,[(s(),t("svg",L1,P1))]),M1,e("mjx-container",I1,[(s(),t("svg",V1,N1))])])])]),j1]),e("mjx-container",F1,[(s(),t("svg",q1,E1))]),W1])}const $1=n(b,[["render",O1]]);export{Y1 as __pageData,$1 as default};
