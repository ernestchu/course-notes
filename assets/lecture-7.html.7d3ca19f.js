import{e}from"./app.bdc3a143.js";import{_ as t}from"./plugin-vue_export-helper.5a098b48.js";const a={},r=e(`<h1 id="lecture-7" tabindex="-1"><a class="header-anchor" href="#lecture-7" aria-hidden="true">#</a> Lecture 7</h1><h2 id="more-sed" tabindex="-1"><a class="header-anchor" href="#more-sed" aria-hidden="true">#</a> More <code>sed</code></h2><p>After the <code>c</code> command, the program don&#39;t go to the next state. Instead, it clears the pattern space and resets the program to the first state. i.e., the presence of <code>-n</code> doesn&#39;t matter because the state handling it has been dropped.</p><p>The rest of line after <code>i</code>, <code>a</code>, <code>c</code> is the argument for the commands. So the semicolon and everything else would be the part of the argument for <code>iac</code>, i.e., the <code>;</code> would not be a command separtor.</p><p>In a sed file, use them like</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-aeverything is part of the argument until newline
-creset
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>In co</p>`,7);function o(n,s){return r}var i=t(a,[["render",o]]);export{i as default};
